{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\dropshipping\\\\mobile developpement\\\\bentriaa\\\\screens\\\\AddUser.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useRef, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { TextInput, TouchableOpacity } from 'react-native-gesture-handler';\nimport { TheContextConsumer } from \"../context/context\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nexport default function AddUser(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    email: \"\",\n    password: \"123456\",\n    nom: \"\",\n    prenom: \"\",\n    numeroDeTelephone: \"\",\n    cin: \"\",\n    proprietaireDe: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      userToAdd = _useState2[0],\n      setuserToAdd = _useState2[1];\n\n  var handleAddAppartement = function handleAddAppartement() {\n    setuserToAdd(_objectSpread(_objectSpread({}, userToAdd), userToAdd.proprietaireDe.push({\n      titreFoncier: \"\",\n      DateDeSignatureDuContrat: \"\",\n      NomDuNotaire: \"\",\n      NAppartement: \"\",\n      Immeuble: \"\"\n    })));\n  };\n\n  var myRefs = useRef([]);\n  var myRefs2 = useRef([]);\n\n  var _useState3 = useState('date'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mode = _useState4[0],\n      setMode = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      show = _useState6[0],\n      setShow = _useState6[1];\n\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  var showDatepicker = function showDatepicker() {\n    showMode('date');\n  };\n\n  var handleSubmit = function handleSubmit(x) {\n    navigation.navigate('Dashboard');\n  };\n\n  return React.createElement(TheContextConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, function (value) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, \"ajouter un compte locataire\"), React.createElement(ScrollView, {\n      style: {\n        backgroundColor: \"grey\",\n        width: \"100%\",\n        height: \"50%\",\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 37\n      }\n    }, \"infos personelles\"), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 37\n      }\n    }, Object.keys(userToAdd).map(function (key, i) {\n      if (key !== \"proprietaireDe\" && key !== \"password\") {\n        return React.createElement(View, {\n          key: i,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 53\n          }\n        }, React.createElement(TextInput, {\n          style: styles.input,\n          placeholder: key,\n          label: key,\n          value: userToAdd[key],\n          onChangeText: function onChangeText(text) {\n            setuserToAdd(function (prev) {\n              var New = _objectSpread({}, prev);\n\n              New[key] = text;\n              return New;\n            });\n          },\n          ref: function ref(tag) {\n            return myRefs.current[i] = tag;\n          },\n          onSubmitEditing: function onSubmitEditing() {\n            for (var t = 1; t < myRefs.current.length - i; t++) {\n              if (myRefs.current[i + t]) {\n                myRefs.current[i + t].focus();\n                break;\n              }\n            }\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 57\n          }\n        }));\n      }\n    })), userToAdd[\"proprietaireDe\"].map(function (appartement, index) {\n      return React.createElement(View, {\n        key: index,\n        style: {\n          backgroundColor: \"yellow\",\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 45\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 49\n        }\n      }, \" Appartement \", index + 1, \" \"), React.createElement(Button, {\n        title: \"annuler\",\n        onPress: function onPress() {\n          if (index > -1) {\n            setuserToAdd(_objectSpread(_objectSpread({}, userToAdd), userToAdd[\"proprietaireDe\"].splice(index, 1)));\n          }\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 53\n        }\n      }), Object.keys(appartement).map(function (key, i) {\n        if (key !== \"DateDeSignatureDuContrat\") {\n          return React.createElement(View, {\n            key: i,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 61\n            }\n          }, React.createElement(Text, {\n            key: i,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 65\n            }\n          }, key, \" \"), React.createElement(TextInput, {\n            ref: function ref(tag) {\n              return myRefs2.current[i] = tag;\n            },\n            style: styles.input,\n            placeholder: key,\n            value: appartement[key],\n            onChangeText: function onChangeText(text) {\n              var NewObject = _objectSpread({}, userToAdd);\n\n              userToAdd[\"proprietaireDe\"][index][key] = text;\n              setuserToAdd(NewObject);\n            },\n            onSubmitEditing: function onSubmitEditing() {\n              for (var t = 1; t < myRefs2.current.length - i; t++) {\n                if (myRefs2.current[i + t]) {\n                  myRefs2.current[i + t].focus();\n                  break;\n                }\n              }\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 65\n            }\n          }));\n        } else {\n          return React.createElement(TouchableOpacity, {\n            style: {\n              display: \"flex\",\n              flexDirection: \"row\",\n              backgroundColor: \"red\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            },\n            onPress: showDatepicker,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 61\n            }\n          }, React.createElement(Text, {\n            style: {\n              width: 300,\n              height: 40,\n              padding: 5,\n              marginVertical: 10,\n              borderColor: 'grey',\n              borderStyle: 'solid',\n              borderRadius: 3,\n              backgroundColor: \"white\",\n              textAlignVertical: \"center\",\n              textAlign: \"center\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 65\n            }\n          }, \" \", typeof appartement[key] === \"string\" ? React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 111\n            }\n          }, \"date \\\"Click pour selectionner une date\\\" \") : React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 169\n            }\n          }, JSON.stringify(appartement[key].getFullYear()) + \" / \" + JSON.stringify(appartement[key].getMonth() + 1) + \" / \" + JSON.stringify(appartement[key].getDate())), \" \"), show && React.createElement(DateTimePicker, {\n            testID: \"dateTimePicker\",\n            value: appartement[key] || new Date(1598051730000),\n            mode: mode,\n            is24Hour: true,\n            display: \"default\",\n            onChange: function onChange(event, selectedDate) {\n              if (selectedDate) {\n                var currentDate = selectedDate;\n                setShow(Platform.OS === 'ios');\n\n                var NewObject = _objectSpread({}, userToAdd);\n\n                userToAdd[\"proprietaireDe\"][index][key] = currentDate;\n                setuserToAdd(NewObject);\n              } else {\n                setShow(false);\n              }\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 69\n            }\n          }));\n        }\n      }));\n    }), React.createElement(Button, {\n      title: \"attribuer un appartement\",\n      onPress: function onPress() {\n        handleAddAppartement();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 37\n      }\n    })), React.createElement(Button, {\n      title: \"Ajouter\",\n      onPress: function onPress() {\n        console.log(userToAdd, myRefs);\n        Alert.alert(\"\", JSON.stringify(userToAdd));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 29\n      }\n    }), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 29\n      }\n    }));\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  input: {\n    width: 300,\n    height: 40,\n    padding: 5,\n    marginVertical: 10,\n    marginHorizontal: 30,\n    borderWidth: 1,\n    borderColor: 'grey',\n    borderStyle: 'solid',\n    borderRadius: 3,\n    backgroundColor: \"white\"\n  }\n});\n{}","map":{"version":3,"sources":["D:/dropshipping/mobile developpement/bentriaa/screens/AddUser.js"],"names":["React","useRef","useState","TextInput","TouchableOpacity","TheContextConsumer","DateTimePicker","AddUser","navigation","email","password","nom","prenom","numeroDeTelephone","cin","proprietaireDe","userToAdd","setuserToAdd","handleAddAppartement","push","titreFoncier","DateDeSignatureDuContrat","NomDuNotaire","NAppartement","Immeuble","myRefs","myRefs2","mode","setMode","show","setShow","showMode","currentMode","showDatepicker","handleSubmit","x","navigate","value","styles","container","backgroundColor","width","height","textAlign","Object","keys","map","key","i","input","text","prev","New","tag","current","t","length","focus","appartement","index","splice","NewObject","display","flexDirection","alignItems","justifyContent","padding","marginVertical","borderColor","borderStyle","borderRadius","textAlignVertical","JSON","stringify","getFullYear","getMonth","getDate","Date","event","selectedDate","currentDate","Platform","OS","console","log","Alert","alert","StyleSheet","create","flex","marginHorizontal","borderWidth"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\r\nimport { StyleSheet,View, Text, Button, Alert, ScrollView } from 'react-native'\r\nimport { TextInput, TouchableOpacity } from 'react-native-gesture-handler'\r\n\r\nimport { TheContextConsumer } from '../context/context';\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\nexport default function AddUser({ navigation }) {\r\n    const [userToAdd, setuserToAdd] = useState({\r\n        email:\"\",\r\n        password:\"123456\",\r\n        nom:\"\",\r\n        prenom:\"\",\r\n        numeroDeTelephone:\"\",\r\n        cin:\"\",\r\n        proprietaireDe:[]\r\n    })\r\n    const handleAddAppartement = () => {\r\n        setuserToAdd({...userToAdd,...userToAdd.proprietaireDe.push(\r\n            {\r\n                titreFoncier:\"\",\r\n                DateDeSignatureDuContrat : \"\",\r\n                NomDuNotaire : \"\",\r\n                NAppartement : \"\",\r\n                Immeuble : \"\",\r\n            }\r\n        )})\r\n    }\r\n    const myRefs= useRef([]);\r\n    const myRefs2= useRef([]);\r\n    // ++++++++++++++++++++++++++++\r\n    // const [date, setDate] = useState(new Date(1598051730000));\r\n    const [mode, setMode] = useState('date');\r\n    const [show, setShow] = useState(false);\r\n\r\n    // const handleOnChange = (event, selectedDate) => {\r\n    //     const currentDate = selectedDate || date;\r\n    //     setShow(Platform.OS === 'ios');\r\n    //     setuserToAdd()\r\n    //     setDate(currentDate);\r\n    // };\r\n\r\n    const showMode = (currentMode) => {\r\n        setShow(true);\r\n        setMode(currentMode);\r\n    };\r\n    const showDatepicker = () => {\r\n        showMode('date');\r\n    };\r\n    \r\n    \r\n    const handleSubmit = (x) => {\r\n        \r\n        navigation.navigate('Dashboard')\r\n    }\r\n\r\n    return (\r\n        <TheContextConsumer>\r\n                {(value) => {\r\n                    return(\r\n                        <View style={styles.container}>\r\n                            <Text>ajouter un compte locataire</Text>\r\n                            <ScrollView style={{backgroundColor:\"grey\",width:\"100%\",height:\"50%\",textAlign:\"center\"}}>\r\n                                \r\n                                    <Text>infos personelles</Text>\r\n                                    \r\n                                    <View>\r\n                                        \r\n                                        {Object.keys(userToAdd).map((key, i)=>{\r\n                                            \r\n                                            if(key !== \"proprietaireDe\" && key !== \"password\" ){\r\n                                                return(\r\n                                                    <View key={i}>\r\n                                                        {/* <Text>{key.toString()} </Text> */}\r\n                                                        <TextInput style={styles.input}\r\n                                                            placeholder={key} \r\n                                                            label={key}\r\n                                                            value={userToAdd[key]}\r\n                                                            onChangeText={(text) => {\r\n                                                                setuserToAdd((prev)=>{\r\n                                                                    let New = {...prev}\r\n                                                                    New[key] = text\r\n                                                                    return(New)\r\n                                                                }) \r\n                                                            }}\r\n                                                            ref={tag => (myRefs.current[i] = tag)} \r\n                                                            \r\n                                                            onSubmitEditing={() => {\r\n                                                                \r\n                                                                for(let t = 1 ; t<(myRefs.current.length - i) ; t++ ){\r\n                                                                    if(myRefs.current[i+t]){\r\n                                                                        myRefs.current[i+t].focus();\r\n                                                                        break \r\n                                                                    }\r\n                                                                    \r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </View>\r\n                                                )        \r\n                                            }\r\n                                            \r\n                                            \r\n                                        })}\r\n                                    </View>\r\n                                    {userToAdd[\"proprietaireDe\"].map((appartement,index) =>{\r\n                                        \r\n                                        return(\r\n                                            <View key={index} style={{backgroundColor:\"yellow\",textAlign:\"center\"}}>\r\n                                                <Text > Appartement {index+1} </Text>\r\n                                                    <Button\r\n                                                        title=\"annuler\"\r\n                                                        onPress={()=>{\r\n                                                            if(index > -1){\r\n                                                                setuserToAdd({...userToAdd,...userToAdd[\"proprietaireDe\"].splice(index,1)})\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n                                                \r\n\r\n                                                {Object.keys(appartement).map((key, i)=>{\r\n                                                    if(key !== \"DateDeSignatureDuContrat\"){\r\n                                                        return(\r\n                                                            <View key={i} >\r\n                                                                <Text key={i}>{key} </Text>\r\n                                                                <TextInput\r\n                                                                    ref={tag => (myRefs2.current[i] = tag)} \r\n                                                                    style={styles.input}\r\n                                                                    placeholder={key}\r\n                                                                    value={appartement[key]}\r\n                                                                    onChangeText={(text) => {\r\n                                                                        let NewObject = {...userToAdd}                                                        \r\n                                                                        userToAdd[\"proprietaireDe\"][index][key] = text;\r\n                                                                        setuserToAdd(NewObject);\r\n                                                                    }}\r\n                                                                    onSubmitEditing={() => {\r\n                                                                \r\n                                                                        for(let t = 1 ; t<(myRefs2.current.length - i) ; t++ ){\r\n                                                                            if(myRefs2.current[i+t]){\r\n                                                                                myRefs2.current[i+t].focus();\r\n                                                                                break \r\n                                                                            }\r\n                                                                            \r\n                                                                        }\r\n                                                                    }}\r\n                                                                    \r\n                                                                />\r\n                                                        \r\n                                                            </View>\r\n                                                        )   \r\n                                                    }else{\r\n                                                        return(\r\n                                                            \r\n                                                            <TouchableOpacity style={{display:\"flex\",flexDirection:\"row\",backgroundColor:\"red\",alignItems:\"center\",justifyContent:\"center\"}} onPress={showDatepicker}>\r\n\r\n\r\n                                                                <Text\r\n                                                                    style={{width: 300,height: 40,padding: 5,marginVertical: 10,borderColor: 'grey',borderStyle: 'solid',borderRadius: 3,backgroundColor:\"white\",textAlignVertical:\"center\",textAlign:\"center\"}}\r\n                                                                    \r\n                                                                    // placeholder={key}\r\n                                                                    // value={appartement[key].toString()}\r\n                                                                    \r\n                                                                > {(typeof(appartement[key]) === \"string\") ? (<Text>date \"Click pour selectionner une date\" </Text>) : (<Text>{JSON.stringify(appartement[key].getFullYear())+\" / \"+JSON.stringify(appartement[key].getMonth() + 1)+\" / \"+JSON.stringify(appartement[key].getDate())}</Text>) } </Text>\r\n                                                                {/* {(false) && appartement[key]} {JSON.stringify(date.getFullYear())+\" / \"+JSON.stringify(date.getMonth())+\" / \"+JSON.stringify(date.getDay())} */}\r\n                                                                {/* <View style={{height: 40,width:40,justifyContent:\"center\"}}>\r\n                                                                    <Button title=\"+\" onPress={()=>{}} />\r\n                                                                </View> */}\r\n                                                                {show && (\r\n                                                                    <DateTimePicker\r\n                                                                        testID=\"dateTimePicker\"\r\n                                                                        value={appartement[key] || new Date(1598051730000)}\r\n                                                                        mode={mode}\r\n                                                                        \r\n                                                                        is24Hour={true}\r\n                                                                        display=\"default\"\r\n                                                                        onChange={(event, selectedDate) => {\r\n                                                                            if(selectedDate){\r\n                                                                                const currentDate = selectedDate;\r\n                                                                                setShow(Platform.OS === 'ios');\r\n                                                                                let NewObject = {...userToAdd}                                                        \r\n                                                                                userToAdd[\"proprietaireDe\"][index][key] = currentDate;\r\n                                                                                setuserToAdd(NewObject);  \r\n                                                                            }else{\r\n                                                                                setShow(false)\r\n                                                                            }\r\n                                                                            \r\n                                                                        }\r\n                                                                            \r\n                                                                        }\r\n                                                                    />\r\n                                                                )}\r\n                                                                \r\n                                                                \r\n                                                            </TouchableOpacity>\r\n                                                        )\r\n                                                    }\r\n                                                    \r\n                                                })}\r\n\r\n                                                \r\n                                            </View>\r\n                                        )\r\n                                        \r\n                                    })}\r\n                                    <Button\r\n                                        title=\"attribuer un appartement\"\r\n                                        onPress={() =>{\r\n                                            handleAddAppartement();\r\n                                        }\r\n                                        }\r\n                                    />\r\n                                \r\n                            </ScrollView>\r\n                            \r\n                            <Button\r\n                                title=\"Ajouter\"\r\n                                onPress={() =>{\r\n                                    console.log(userToAdd,myRefs)\r\n                                    Alert.alert(\"\",JSON.stringify(userToAdd))\r\n                                    // handleSubmit(value.addNewUser(userToAdd))\r\n                                }\r\n                                \r\n                                }\r\n                            />\r\n                            <View></View> \r\n                        </View>      \r\n                    )\r\n                }}\r\n        </TheContextConsumer>\r\n            \r\n            \r\n\r\n        \r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n    },\r\n    input: {\r\n        width: 300,\r\n        height: 40,\r\n        padding: 5,\r\n        marginVertical: 10,\r\n        marginHorizontal: 30,\r\n        borderWidth: 1,\r\n        borderColor: 'grey',\r\n        borderStyle: 'solid',\r\n        borderRadius: 3,\r\n        backgroundColor:\"white\",\r\n    },\r\n});\r\n\r\n{/* \r\n<View>\r\n<TextInput style={styles.input}\r\n    placeholder=\"Email\" \r\n    label=\"Email\" \r\n    value={userToAdd.email}\r\n    onChangeText={(text) => {\r\n        setuserToAdd({...userToAdd,email:text})\r\n    }}\r\n    autoFocus={true}\r\n    onSubmitEditing={() => ref_input2.current.focus()}\r\n/>\r\n<TextInput style={styles.input}\r\n    placeholder=\"Password\" \r\n    label=\"Password\" \r\n    value={userToAdd.Password}\r\n    secureTextEntry={true}\r\n    onChangeText={(text) => {\r\n        setuserToAdd({...userToAdd,password:text})\r\n    }}\r\n    ref={ref_input2}\r\n    onSubmitEditing={() => ref_input3.current.focus()}\r\n/>\r\n<TextInput style={styles.input}\r\n    placeholder=\"Nom\" \r\n    label=\"Nom\" \r\n    value={userToAdd.nom}\r\n    onChangeText={(text) => {\r\n        setuserToAdd({...userToAdd,nom:text})\r\n    }}\r\n    ref={ref_input3}\r\n    onSubmitEditing={() => ref_input4.current.focus()} \r\n/>\r\n<TextInput style={styles.input}\r\n    placeholder=\"Prenom\" \r\n    label=\"Prenom\" \r\n    value={userToAdd.prenom}\r\n    onChangeText={(text) => {\r\n        setuserToAdd({...userToAdd,prenom:text})\r\n    }}\r\n    ref={ref_input4}\r\n    onSubmitEditing={() => ref_input5.current.focus()}\r\n/>\r\n<TextInput style={styles.input}\r\n    placeholder=\"Numero De Telephone\" \r\n    label=\"Numero De Telephone\" \r\n    value={userToAdd.numeroDeTelephone}\r\n    onChangeText={(text) => {\r\n        setuserToAdd({...userToAdd,numeroDeTelephone:text})\r\n    }}\r\n    ref={ref_input5}\r\n    onSubmitEditing={() => ref_input6.current.focus()}\r\n/>\r\n<TextInput style={styles.input}\r\n    placeholder=\"CIN\" \r\n    label=\"CIN\" \r\n    value={userToAdd.cin}\r\n    onChangeText={(text) => {\r\n        setuserToAdd({...userToAdd,cin:text})\r\n    }}\r\n    ref={ref_input6}\r\n    \r\n/>    \r\n</View> */}"]},"metadata":{},"sourceType":"module"}