{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\dropshipping\\\\mobile developpement\\\\bentriaa\\\\screens\\\\Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport { TheContextConsumer } from \"../context/context\";\nexport default function Login(_ref, props) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    email: \"hassaneloufir98@gmail.com\",\n    password: \"123456\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setuser = _useState2[1];\n\n  return React.createElement(TheContextConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, function (value) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }\n    }, value.userState.email && navigation.navigate('Dashboard'), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    }, \"Veuillez vous connecter\"), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 29\n      }\n    }, React.createElement(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      label: \"Email\",\n      value: user.email,\n      onChangeText: function onChangeText(text) {\n        setuser(_objectSpread(_objectSpread({}, user), {}, {\n          email: text\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }\n    }), React.createElement(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      label: \"Password\",\n      secureTextEntry: true,\n      value: user.password,\n      onChangeText: function onChangeText(text) {\n        setuser(_objectSpread(_objectSpread({}, user), {}, {\n          password: text\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }\n    })), React.createElement(View, {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        width: \"100%\",\n        alignItems: 'center',\n        padding: 40,\n        justifyContent: 'space-between'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, React.createElement(Button, {\n      title: \"back\",\n      onPress: function onPress() {\n        navigation.navigate('Home');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    }), React.createElement(Button, {\n      title: \"GO\",\n      onPress: function onPress() {\n        value.Login(user.email, user.password);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    })), React.createElement(Button, {\n      title: \"test\",\n      onPress: function onPress() {\n        Alert.alert(\"test button\", value.userState.uid);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }));\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  input: {\n    width: 300,\n    height: 40,\n    padding: 5,\n    margin: 30,\n    borderWidth: 1,\n    borderColor: 'grey',\n    borderStyle: 'solid',\n    borderRadius: 3\n  },\n  datePickerStyle: {\n    width: 300,\n    margin: 30\n  }\n});","map":{"version":3,"sources":["D:/dropshipping/mobile developpement/bentriaa/screens/Login.js"],"names":["React","useState","TextInput","TheContextConsumer","Login","props","navigation","email","password","user","setuser","value","styles","container","userState","navigate","input","text","display","flexDirection","width","alignItems","padding","justifyContent","Alert","alert","uid","StyleSheet","create","flex","backgroundColor","height","margin","borderWidth","borderColor","borderStyle","borderRadius","datePickerStyle"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { StyleSheet,View, Text, Button, Alert } from 'react-native'\r\nimport { TextInput } from 'react-native-gesture-handler'\r\nimport { TheContextConsumer } from '../context/context'\r\n\r\n\r\nexport default function Login({ navigation },props) {\r\n\r\n    const [user, setuser] = useState({\r\n        // email:\"\",\r\n        // password:\"\"\r\n        email:\"hassaneloufir98@gmail.com\",\r\n        password:\"123456\"\r\n    })\r\n    \r\n    \r\n    return (\r\n        \r\n        <TheContextConsumer >\r\n                {(value) => {\r\n                    \r\n                    return(\r\n                        <View style={styles.container}>\r\n                        {(value.userState.email) && navigation.navigate('Dashboard')}\r\n                        <Text>Veuillez vous connecter</Text>\r\n                            \r\n\r\n                            \r\n                            <View>\r\n                            \r\n                            <TextInput \r\n                                style={styles.input}\r\n                                placeholder=\"Email\" \r\n                                label=\"Email\" \r\n                                value={user.email}\r\n                                onChangeText={(text) => {setuser({...user,email:text})}}\r\n                            />\r\n                            <TextInput \r\n                                style={styles.input}\r\n                                placeholder=\"Password\" \r\n                                label=\"Password\"\r\n                                secureTextEntry={true} \r\n                                value={user.password}\r\n                                onChangeText={(text) => {setuser({...user,password:text})}}\r\n                            />\r\n\r\n                        </View>\r\n                        <View style={{display:\"flex\",flexDirection:\"row\",width:\"100%\",alignItems: 'center',padding:40,justifyContent: 'space-between'}}>\r\n                            <Button\r\n                                \r\n                                title=\"back\"\r\n                                onPress={() =>{\r\n                                    navigation.navigate('Home')\r\n                                }}\r\n                                \r\n                            />\r\n                            <Button\r\n                                \r\n                                title=\"GO\"\r\n                                onPress={() =>{\r\n                                    value.Login(user.email,user.password);\r\n\r\n                                }\r\n                                    // navigation.navigate('Home')\r\n                                }\r\n                                \r\n                            />\r\n                            \r\n                        </View>\r\n                            \r\n                            <Button\r\n                                title=\"test\"\r\n                                onPress={() =>{Alert.alert(\"test button\",value.userState.uid)}\r\n                                    // navigation.navigate('Home')\r\n                                }\r\n                            />\r\n                        </View>\r\n                    )\r\n                }}\r\n        </TheContextConsumer>    \r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-around',\r\n    },\r\n    input: {\r\n        width: 300,\r\n        height: 40,\r\n        padding: 5,\r\n        margin: 30,\r\n        borderWidth: 1,\r\n        borderColor: 'grey',\r\n        borderStyle: 'solid',\r\n        borderRadius: 3\r\n    },\r\n    datePickerStyle: {\r\n        width: 300,\r\n        margin: 30,\r\n        // width: 200,\r\n        // marginTop: 20,\r\n    },\r\n    \r\n});"]},"metadata":{},"sourceType":"module"}