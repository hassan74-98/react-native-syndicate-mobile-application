{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\dropshipping\\\\mobile developpement\\\\bentriaa\\\\screens\\\\AddUser.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useRef, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { TextInput, TouchableOpacity } from 'react-native-gesture-handler';\nimport { TheContextConsumer } from \"../context/context\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { auThentication, fireStore } from \"../firebase/firebase\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nexport default function AddUser(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    email: \"a@gmail.com\",\n    password: \"123456\",\n    nom: \"zada\",\n    prenom: \"dazd\",\n    numeroDeTelephone: \"zef\",\n    cin: \"zefzef\",\n    role: \"User\",\n    proprietaireDe: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      userToAdd = _useState2[0],\n      setuserToAdd = _useState2[1];\n\n  var handleAddAppartement = function handleAddAppartement() {\n    setuserToAdd(_objectSpread(_objectSpread({}, userToAdd), userToAdd.proprietaireDe.push({\n      titreFoncier: \"aaa\",\n      DateDeSignatureDuContrat: \"\",\n      NomDuNotaire: \"azdaz\",\n      NAppartement: \"azdazd\",\n      Immeuble: \"azdaz\"\n    })));\n  };\n\n  var _useState3 = useState(-1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      role = _useState4[0],\n      setrole = _useState4[1];\n\n  var myRefs = useRef([]);\n  var myRefs2 = useRef([]);\n\n  var _useState5 = useState('date'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mode = _useState6[0],\n      setMode = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      show = _useState8[0],\n      setShow = _useState8[1];\n\n  var handleDatePickerOnChange = function handleDatePickerOnChange(selectedDate, index, key) {\n    var NewObject = _objectSpread({}, userToAdd);\n\n    NewObject[\"proprietaireDe\"][index][key] = new Date(JSON.stringify(selectedDate).split('\"')[1].split('T')[0]);\n    return NewObject;\n  };\n\n  var showMode = function showMode(currentMode) {\n    setMode(currentMode);\n  };\n\n  var showDatepicker = function showDatepicker(x) {\n    showMode('date');\n    setrole(x);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var verfied = true;\n\n    if (!userToAdd[\"proprietaireDe\"][0]) {\n      verfied = false;\n      Alert.alert(\"Champ maquant:\", \"Veuillez ajouter au moins un appartement.\" + userToAdd[\"proprietaireDe\"].length.toString());\n    }\n\n    Object.keys(userToAdd).map(function (key, i) {\n      if (key.toString() === \"proprietaireDe\") {\n        userToAdd[key].map(function (appartement, appI) {\n          Object.keys(appartement).map(function (appKey) {\n            if (appartement[appKey] === \"\") {\n              Alert.alert(\"Champ manquant:\", appKey.toString() + \"\\n\" + \"(Appartement : \" + (appI + 1) + \")\");\n              verfied = false;\n            }\n          });\n\n          for (var t = appI + 1; t < userToAdd[key].length; t++) {\n            if (appartement[\"titreFoncier\"] === userToAdd[key][t][\"titreFoncier\"]) {\n              Alert.alert(\"Meme titre foncier pour deux appartement !!!\", \"Appartement :\" + (appI + 1).toString() + \" et \" + (t + 1).toString());\n              verfied = false;\n            }\n          }\n        });\n      } else {\n        if (userToAdd[key] === \"\") {\n          Alert.alert(\"Champ manquant:\", key.toString());\n          verfied = false;\n        }\n      }\n    });\n\n    if (verfied === true) {\n      auThentication.createUserWithEmailAndPassword(userToAdd.email, userToAdd.password).then(function (Credentials) {\n        fireStore.collection(\"users\").doc(Credentials.user.uid).set(userToAdd).catch(function (e) {\n          Alert.alert(e.toString());\n        }).catch(function (e) {\n          return Alert.alert(e.toString());\n        });\n      }).then(function () {\n        Alert.alert(userToAdd.email, \"ajouté 👍\");\n        setuserToAdd({\n          email: \"\",\n          password: \"123456\",\n          nom: \"\",\n          prenom: \"\",\n          numeroDeTelephone: \"\",\n          cin: \"\",\n          role: \"User\",\n          proprietaireDe: []\n        });\n      }).catch(function (e) {\n        return Alert.alert(e.toString());\n      });\n    }\n  };\n\n  return React.createElement(TheContextConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, function (value) {\n    if (value.userState) {}\n\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 29\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 29\n      }\n    }, \"ajouter un compte locataire\"), React.createElement(ScrollView, {\n      style: {\n        backgroundColor: \"grey\",\n        width: \"100%\",\n        height: \"50%\",\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 37\n      }\n    }, \"infos personelles\"), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 37\n      }\n    }, Object.keys(userToAdd).map(function (key, i) {\n      if (key !== \"proprietaireDe\" && key !== \"password\" && key !== \"role\") {\n        return React.createElement(View, {\n          key: i,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 53\n          }\n        }, React.createElement(Text, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 57\n          }\n        }, key.toString(), \" \"), React.createElement(TextInput, {\n          style: styles.input,\n          placeholder: key,\n          label: key,\n          value: userToAdd[key],\n          onChangeText: function onChangeText(text) {\n            setuserToAdd(function (prev) {\n              var New = _objectSpread({}, prev);\n\n              New[key] = text;\n              return New;\n            });\n          },\n          ref: function ref(tag) {\n            return myRefs.current[i] = tag;\n          },\n          onSubmitEditing: function onSubmitEditing() {\n            for (var t = 1; t < myRefs.current.length - i; t++) {\n              if (myRefs.current[i + t]) {\n                myRefs.current[i + t].focus();\n                break;\n              }\n            }\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 57\n          }\n        }));\n      } else if (key === \"role\" && value.userState.role === \"Admin\") {\n        return React.createElement(View, {\n          key: i,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 53\n          }\n        }, React.createElement(Text, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 57\n          }\n        }, key.toString(), \" \"), React.createElement(View, {\n          style: styles.input,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 57\n          }\n        }, React.createElement(Picker, {\n          selectedValue: userToAdd[\"role\"],\n          style: {\n            height: \"100%\"\n          },\n          onValueChange: function onValueChange(itemValue, itemIndex) {\n            setuserToAdd(function (prev) {\n              var New = _objectSpread({}, prev);\n\n              New[key] = itemValue;\n              return New;\n            });\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 61\n          }\n        }, React.createElement(Picker.Item, {\n          label: \"User\",\n          value: \"User\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 65\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"representative\",\n          value: \"representative\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 65\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"Syndic\",\n          value: \"Syndic\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 65\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"Treasurer\",\n          value: \"Treasurer\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 65\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"Admin\",\n          value: \"Admin\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 65\n          }\n        }))));\n      }\n    })), userToAdd[\"proprietaireDe\"].map(function (appartement, index) {\n      return React.createElement(View, {\n        key: index,\n        style: {\n          backgroundColor: \"yellow\",\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 45\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 49\n        }\n      }, \" Appartement \", index + 1, \" \"), React.createElement(Button, {\n        title: \"annuler\",\n        onPress: function onPress() {\n          if (index > -1) {\n            var n = userToAdd[\"proprietaireDe\"];\n            n.splice(index, 1);\n            setuserToAdd(_objectSpread(_objectSpread({}, userToAdd), {}, {\n              proprietaireDe: n\n            }));\n          }\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 53\n        }\n      }), Object.keys(appartement).map(function (key, i) {\n        if (key !== \"DateDeSignatureDuContrat\") {\n          return React.createElement(View, {\n            key: i,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 61\n            }\n          }, React.createElement(Text, {\n            key: i,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 65\n            }\n          }, key, \" \"), React.createElement(TextInput, {\n            ref: function ref(tag) {\n              return myRefs2.current[i] = tag;\n            },\n            style: styles.input,\n            placeholder: key,\n            value: appartement[key],\n            onChangeText: function onChangeText(text) {\n              var NewObject = _objectSpread({}, userToAdd);\n\n              userToAdd[\"proprietaireDe\"][index][key] = text;\n              setuserToAdd(NewObject);\n            },\n            onSubmitEditing: function onSubmitEditing() {\n              for (var t = 1; t < myRefs2.current.length - i; t++) {\n                if (myRefs2.current[i + t]) {\n                  myRefs2.current[i + t].focus();\n                  break;\n                }\n              }\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 65\n            }\n          }));\n        } else {\n          return React.createElement(TouchableOpacity, {\n            style: {\n              display: \"flex\",\n              flexDirection: \"row\",\n              backgroundColor: \"red\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            },\n            onPress: function onPress() {\n              return showDatepicker(index);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 61\n            }\n          }, React.createElement(Text, {\n            style: {\n              width: 300,\n              height: 40,\n              padding: 5,\n              marginVertical: 10,\n              borderColor: 'grey',\n              borderStyle: 'solid',\n              borderRadius: 3,\n              backgroundColor: \"white\",\n              textAlignVertical: \"center\",\n              textAlign: \"center\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 65\n            }\n          }, typeof appartement[key] === \"string\" ? React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 113\n            }\n          }, \"date \\\"Click pour selectionner une date\\\" \") : React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 171\n            }\n          }, JSON.stringify(appartement[key]).split('\"')[1].split(\"T\")[0])), role === index && React.createElement(View, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 69\n            }\n          }, React.createElement(DateTimePicker, {\n            testID: key.toString(),\n            value: appartement[key] || new Date(),\n            mode: mode,\n            is24Hour: true,\n            display: \"default\",\n            onChange: function onChange(event, selectedDate) {\n              if (selectedDate) {\n                setrole(-1);\n                setShow(Platform.OS === 'ios');\n                setuserToAdd(handleDatePickerOnChange(selectedDate, index, key));\n              } else {\n                setrole(-1);\n              }\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 73\n            }\n          })));\n        }\n      }));\n    }), React.createElement(Button, {\n      title: \"ajouter un appartement\",\n      onPress: function onPress() {\n        handleAddAppartement();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 37\n      }\n    })), React.createElement(Button, {\n      title: \"Ajouter\",\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 29\n      }\n    }), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 29\n      }\n    }));\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  input: {\n    width: 300,\n    height: 40,\n    padding: 5,\n    marginVertical: 10,\n    marginHorizontal: 30,\n    borderWidth: 1,\n    borderColor: 'grey',\n    borderStyle: 'solid',\n    borderRadius: 3,\n    backgroundColor: \"white\"\n  }\n});","map":{"version":3,"sources":["D:/dropshipping/mobile developpement/bentriaa/screens/AddUser.js"],"names":["React","useRef","useState","TextInput","TouchableOpacity","TheContextConsumer","DateTimePicker","auThentication","fireStore","AddUser","navigation","email","password","nom","prenom","numeroDeTelephone","cin","role","proprietaireDe","userToAdd","setuserToAdd","handleAddAppartement","push","titreFoncier","DateDeSignatureDuContrat","NomDuNotaire","NAppartement","Immeuble","setrole","myRefs","myRefs2","mode","setMode","show","setShow","handleDatePickerOnChange","selectedDate","index","key","NewObject","Date","JSON","stringify","split","showMode","currentMode","showDatepicker","x","handleSubmit","verfied","Alert","alert","length","toString","Object","keys","map","i","appartement","appI","appKey","t","createUserWithEmailAndPassword","then","Credentials","collection","doc","user","uid","set","catch","e","value","userState","styles","container","backgroundColor","width","height","textAlign","input","text","prev","New","tag","current","focus","itemValue","itemIndex","n","splice","display","flexDirection","alignItems","justifyContent","padding","marginVertical","borderColor","borderStyle","borderRadius","textAlignVertical","event","Platform","OS","StyleSheet","create","flex","marginHorizontal","borderWidth"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\r\nimport { StyleSheet,View, Text, Button, Alert, ScrollView } from 'react-native'\r\nimport { TextInput, TouchableOpacity } from 'react-native-gesture-handler'\r\n\r\nimport { TheContextConsumer } from '../context/context';\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\nimport { auThentication, fireStore } from '../firebase/firebase';\r\nimport { Picker } from 'react-native';\r\nexport default function AddUser({ navigation }) {\r\n    \r\n\r\n    \r\n    // Usr Infos \r\n    const [userToAdd, setuserToAdd] = useState({\r\n        email:\"a@gmail.com\",\r\n        password:\"123456\",\r\n        nom:\"zada\",\r\n        prenom:\"dazd\",\r\n        numeroDeTelephone:\"zef\",\r\n        cin:\"zefzef\",\r\n        role:\"User\",\r\n        proprietaireDe:[]\r\n    })\r\n    //++++++++++++++++++++++++++++++++++++++++++++++++ \r\n\r\n    // add appartement to appatements\r\n    const handleAddAppartement = () => {\r\n        setuserToAdd({...userToAdd,...userToAdd.proprietaireDe.push({\r\n            titreFoncier:\"aaa\",\r\n            DateDeSignatureDuContrat : \"\",\r\n            NomDuNotaire : \"azdaz\",\r\n            NAppartement : \"azdazd\",\r\n            Immeuble : \"azdaz\",\r\n        }\r\n        )})\r\n    }\r\n    \r\n    // ++++++++++++++++++++++++++++\r\n\r\n\r\n    // Triggers to show date-pickers\r\n    const [role, setrole] = useState(-1)\r\n    //+++++++++++++++++++++++++++++\r\n\r\n    // input Refs To focus on next input automatically\r\n    const myRefs= useRef([]);\r\n    const myRefs2= useRef([]);\r\n    // +++++++++++++++++++++++++++++++++++++++++++++++\r\n\r\n    // date picker parameters and functions\r\n    const [mode, setMode] = useState('date');\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleDatePickerOnChange = (selectedDate,index,key) => {\r\n\r\n        // let mySelectedDate = new Date(selectedDate)\r\n        // Alert.alert(JSON.stringify(selectedDate),mySelectedDate.getFullYear()+\" / \"+mySelectedDate.getMonth()+\" / \"+mySelectedDate.getDate()+\"\\n\"+(new Date(JSON.stringify(selectedDate).split('\"')[1].split('T')[0])).toString())\r\n        // let NewSelectedDate = new Date(mySelectedDate.getFullYear(),mySelectedDate.getMonth(),mySelectedDate.getDate());\r\n        let NewObject = {...userToAdd}\r\n        NewObject[\"proprietaireDe\"][index][key] = (new Date(JSON.stringify(selectedDate).split('\"')[1].split('T')[0]));\r\n        return(NewObject)\r\n    }\r\n    const showMode = (currentMode) => {\r\n        setMode(currentMode);\r\n    };\r\n    const showDatepicker = (x) => {\r\n        showMode('date');\r\n        setrole(x)\r\n    };\r\n    // +++++++++++++++++++++++++++++++++++++++++++++++\r\n    \r\n    \r\n    \r\n\r\n    \r\n    \r\n    \r\n    \r\n    const handleSubmit = () => {\r\n        \r\n        let verfied = true;\r\n        \r\n        if(!userToAdd[\"proprietaireDe\"][0]){\r\n            verfied = false;\r\n            Alert.alert(\"Champ maquant:\",\"Veuillez ajouter au moins un appartement.\"+userToAdd[\"proprietaireDe\"].length.toString())\r\n        }\r\n\r\n        Object.keys(userToAdd).map((key,i)=>{\r\n            if(key.toString() === \"proprietaireDe\"){\r\n                \r\n                userToAdd[key].map((appartement,appI)=>{\r\n                    // appartement[\"titreFoncier\"]\r\n\r\n                    Object.keys(appartement).map((appKey)=>{\r\n\r\n                        if(appartement[appKey] === \"\"){\r\n                            Alert.alert(\"Champ manquant:\", appKey.toString() +\"\\n\"+ \"(Appartement : \" + (appI+1)+\")\")\r\n                            verfied = false\r\n                        }\r\n                        \r\n                    })\r\n                    for(var t = appI+1 ; t < userToAdd[key].length ; t++){\r\n                        \r\n                        if(appartement[\"titreFoncier\"] === userToAdd[key][t][\"titreFoncier\"] ){\r\n                            Alert.alert(\"Meme titre foncier pour deux appartement !!!\",\"Appartement :\"+(appI+1).toString()+\" et \"+(t+1).toString());\r\n                            verfied = false\r\n                            \r\n                        }\r\n                    }\r\n                })\r\n                \r\n            }else{\r\n                if(userToAdd[key] === \"\"){\r\n                    Alert.alert(\"Champ manquant:\",key.toString())\r\n                    verfied = false;\r\n                }\r\n            }\r\n\r\n        })\r\n\r\n        if(verfied===true){\r\n            // ChargeByAppartement()\r\n            \r\n            auThentication.createUserWithEmailAndPassword(userToAdd.email,userToAdd.password).then((Credentials)=>{\r\n                fireStore.collection(\"users\").doc(Credentials.user.uid).set(userToAdd).catch((e)=>{\r\n                    Alert.alert(e.toString());\r\n                }).catch((e)=>Alert.alert(e.toString()))\r\n            }).then(()=>{\r\n                Alert.alert(userToAdd.email,\"ajouté 👍\");\r\n                setuserToAdd({\r\n                    email:\"\",\r\n                    password:\"123456\",\r\n                    nom:\"\",\r\n                    prenom:\"\",\r\n                    numeroDeTelephone:\"\",\r\n                    cin:\"\",\r\n                    role:\"User\",\r\n                    proprietaireDe:[]\r\n                })\r\n            }).catch((e)=>Alert.alert(e.toString()))\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <TheContextConsumer>\r\n                {(value) => {\r\n                    if(value.userState){\r\n\r\n                    }\r\n                    return(\r\n                        <View style={styles.container}>\r\n                            <Text></Text>\r\n                            \r\n                            <Text>ajouter un compte locataire</Text>\r\n                            \r\n                                \r\n                            \r\n                            <ScrollView style={{backgroundColor:\"grey\",width:\"100%\",height:\"50%\",textAlign:\"center\"}}>\r\n                                    \r\n                                    <Text>infos personelles</Text>\r\n                                    \r\n                                    <View>\r\n                                        \r\n                                        {Object.keys(userToAdd).map((key, i)=>{\r\n                                            \r\n                                            if(key !== \"proprietaireDe\" && key !== \"password\" && key !== \"role\"){\r\n                                                return(\r\n                                                    <View key={i}>\r\n                                                        <Text>{key.toString()} </Text>\r\n                                                        <TextInput style={styles.input}\r\n                                                            placeholder={key} \r\n                                                            label={key}\r\n                                                            value={userToAdd[key]}\r\n                                                            onChangeText={(text) => {\r\n                                                                setuserToAdd((prev)=>{\r\n                                                                    let New = {...prev}\r\n                                                                    New[key] = text\r\n                                                                    return(New)\r\n                                                                }) \r\n                                                            }}\r\n                                                            ref={tag => (myRefs.current[i] = tag)} \r\n                                                            \r\n                                                            onSubmitEditing={() => {\r\n                                                                \r\n                                                                for(let t = 1 ; t<(myRefs.current.length - i) ; t++ ){\r\n                                                                    if(myRefs.current[i+t]){\r\n                                                                        myRefs.current[i+t].focus();\r\n                                                                        break \r\n                                                                    }\r\n                                                                    \r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </View>\r\n                                                )        \r\n                                            }else if( key === \"role\" && value.userState.role === \"Admin\"){\r\n\r\n                                                return(\r\n                                                    <View key={i}>\r\n                                                        <Text>{key.toString()} </Text>\r\n                                                        \r\n                                                        <View style={styles.input}>\r\n                                                            <Picker\r\n                                                                selectedValue={userToAdd[\"role\"]}\r\n                                                                style={{height:\"100%\"}}\r\n                                                                onValueChange={(itemValue, itemIndex) => {\r\n                                                                    setuserToAdd((prev)=>{\r\n                                                                        let New = {...prev}\r\n                                                                        New[key] = itemValue\r\n                                                                        return(New)\r\n                                                                    }) \r\n                                                                }}\r\n                                                            >\r\n                                                                <Picker.Item label=\"User\" value=\"User\" />\r\n                                                                <Picker.Item label=\"representative\" value=\"representative\" />\r\n                                                                <Picker.Item label=\"Syndic\" value=\"Syndic\" />\r\n                                                                <Picker.Item label=\"Treasurer\" value=\"Treasurer\" />\r\n                                                                <Picker.Item label=\"Admin\" value=\"Admin\" />\r\n                                                            </Picker>\r\n                                                            \r\n                                                        </View>\r\n                                                    </View>\r\n                                                )\r\n                                            }\r\n                                            \r\n                                            \r\n                                        })}\r\n                                    </View>\r\n                                    {userToAdd[\"proprietaireDe\"].map((appartement,index) =>{\r\n                                        \r\n                                        return(\r\n                                            <View key={index} style={{backgroundColor:\"yellow\",textAlign:\"center\"}}>\r\n                                                <Text > Appartement {index+1} </Text>\r\n                                                    <Button\r\n                                                        title=\"annuler\"\r\n                                                        onPress={()=>{\r\n                                                            \r\n                                                            if(index > -1){\r\n                                                                let n =userToAdd[\"proprietaireDe\"]\r\n                                                                n.splice(index,1)\r\n                                                                setuserToAdd({...userToAdd,proprietaireDe:n})\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n                                                \r\n\r\n                                                {Object.keys(appartement).map((key, i)=>{\r\n                                                    if(key !== \"DateDeSignatureDuContrat\"){\r\n                                                        return(\r\n                                                            <View key={i} >\r\n                                                                <Text key={i}>{key} </Text>\r\n                                                                <TextInput\r\n                                                                    ref={tag => (myRefs2.current[i] = tag)} \r\n                                                                    style={styles.input}\r\n                                                                    placeholder={key}\r\n                                                                    value={appartement[key]}\r\n                                                                    onChangeText={(text) => {\r\n                                                                        let NewObject = {...userToAdd}                                                        \r\n                                                                        userToAdd[\"proprietaireDe\"][index][key] = text;\r\n                                                                        setuserToAdd(NewObject);\r\n                                                                    }}\r\n                                                                    onSubmitEditing={() => {\r\n                                                                \r\n                                                                        for(let t = 1 ; t<(myRefs2.current.length - i) ; t++ ){\r\n                                                                            if(myRefs2.current[i+t]){\r\n                                                                                myRefs2.current[i+t].focus();\r\n                                                                                break \r\n                                                                            }\r\n                                                                            \r\n                                                                        }\r\n                                                                    }}\r\n                                                                    \r\n                                                                />\r\n                                                        \r\n                                                            </View>\r\n                                                        )   \r\n                                                    }else{\r\n                                                        return(\r\n                                                            \r\n                                                            <TouchableOpacity style={{display:\"flex\",flexDirection:\"row\",backgroundColor:\"red\",alignItems:\"center\",justifyContent:\"center\"}} onPress={()=>showDatepicker(index)}>\r\n\r\n\r\n                                                                <Text style={{width: 300,height: 40,padding: 5,marginVertical: 10,borderColor: 'grey',borderStyle: 'solid',borderRadius: 3,backgroundColor:\"white\",textAlignVertical:\"center\",textAlign:\"center\"}}>\r\n                                                                    {(typeof(appartement[key]) === \"string\") ? (<Text>date \"Click pour selectionner une date\" </Text>) : (<Text>{JSON.stringify(appartement[key]).split('\"')[1].split(\"T\")[0]}</Text>)}\r\n                                                                </Text>\r\n                                                                \r\n                                                                {(role === index) && (\r\n                                                                \r\n                                                                    <View>\r\n                                                                        \r\n                                                                        <DateTimePicker\r\n                                                                            testID={key.toString()}\r\n                                                                            value={appartement[key] || new Date()}\r\n                                                                            mode={mode}\r\n                                                                            \r\n                                                                            is24Hour={true}\r\n                                                                            display=\"default\"\r\n                                                                            onChange={(event, selectedDate) => {\r\n                                                                                \r\n                                                                                if(selectedDate){\r\n                                                                                    setrole(-1)\r\n                                                                                    setShow(Platform.OS === 'ios');\r\n                                                                                    setuserToAdd(handleDatePickerOnChange(selectedDate,index,key));\r\n                                                                                }else{\r\n                                                                                    setrole(-1)\r\n                                                                                }\r\n                                                                                \r\n                                                                            }\r\n                                                                                \r\n                                                                            }\r\n                                                                        />    \r\n                                                                    </View>\r\n                                                                    \r\n                                                                )}\r\n                                                                \r\n                                                                \r\n                                                            </TouchableOpacity>\r\n                                                        )\r\n                                                    }\r\n                                                    \r\n                                                })}\r\n\r\n                                                \r\n                                            </View>\r\n                                        )\r\n                                        \r\n                                    })}\r\n                                    <Button\r\n                                        title=\"ajouter un appartement\"\r\n                                        onPress={() =>{\r\n                                            handleAddAppartement();\r\n                                        }\r\n                                        }\r\n                                    />\r\n                                \r\n                            </ScrollView>\r\n                            \r\n                            <Button\r\n                                title=\"Ajouter\"\r\n                                onPress={handleSubmit}\r\n                            />\r\n                            <View></View> \r\n                            \r\n                        </View>      \r\n                    )\r\n                }}\r\n        </TheContextConsumer>\r\n            \r\n            \r\n\r\n        \r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n    },\r\n    input: {\r\n        width: 300,\r\n        height: 40,\r\n        padding: 5,\r\n        marginVertical: 10,\r\n        marginHorizontal: 30,\r\n        borderWidth: 1,\r\n        borderColor: 'grey',\r\n        borderStyle: 'solid',\r\n        borderRadius: 3,\r\n        backgroundColor:\"white\",\r\n    },\r\n});\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}