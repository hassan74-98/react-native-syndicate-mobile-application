{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\dropshipping\\\\mobile developpement\\\\bentriaa\\\\EditUser.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useRef, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nexport default function EditUser(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(route.params.user),\n      _useState2 = _slicedToArray(_useState, 2),\n      userToEdit = _useState2[0],\n      setuserToEdit = _useState2[1];\n\n  var ref_input2 = useRef();\n  var ref_input3 = useRef();\n  var ref_input4 = useRef();\n  var ref_input5 = useRef();\n  var ref_input6 = useRef();\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, \"ajouter un compte locataire\"), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: userToEdit.email,\n    label: \"Email\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Nom\",\n    label: \"Nom\",\n    value: userToEdit.nom,\n    onChangeText: function onChangeText(text) {\n      setuserToEdit(_objectSpread(_objectSpread({}, userToEdit), {}, {\n        nom: text\n      }));\n    },\n    autoFocus: true,\n    ref: ref_input2,\n    onSubmitEditing: function onSubmitEditing() {\n      return ref_input3.current.focus();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Prenom\",\n    label: \"Prenom\",\n    value: userToEdit.prenom,\n    onChangeText: function onChangeText(text) {\n      setuserToEdit(_objectSpread(_objectSpread({}, userToEdit), {}, {\n        prenom: text\n      }));\n    },\n    ref: ref_input3,\n    onSubmitEditing: function onSubmitEditing() {\n      return ref_input4.current.focus();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Numero De Telephone\",\n    label: \"Numero De Telephone\",\n    value: userToEdit.numeroDeTelephone,\n    onChangeText: function onChangeText(text) {\n      setuserToEdit(_objectSpread(_objectSpread({}, userToEdit), {}, {\n        numeroDeTelephone: text\n      }));\n    },\n    ref: ref_input4,\n    onSubmitEditing: function onSubmitEditing() {\n      return ref_input5.current.focus();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"CIN\",\n    label: \"CIN\",\n    value: userToEdit.cin,\n    onChangeText: function onChangeText(text) {\n      setuserToEdit(_objectSpread(_objectSpread({}, userToEdit), {}, {\n        cin: text\n      }));\n    },\n    ref: ref_input5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), \" \"), React.createElement(View, {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      width: \"80%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"retour\",\n    onPress: function onPress() {\n      navigation.navigate('SelectUser');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    title: \"Confirmer\",\n    onPress: function onPress() {\n      console.log(userToEdit);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  input: {\n    width: 300,\n    height: 40,\n    padding: 5,\n    borderWidth: 1,\n    borderColor: 'grey',\n    borderStyle: 'solid',\n    borderRadius: 3\n  }\n});","map":{"version":3,"sources":["D:/dropshipping/mobile developpement/bentriaa/EditUser.js"],"names":["React","useRef","useState","EditUser","route","navigation","params","user","userToEdit","setuserToEdit","ref_input2","ref_input3","ref_input4","ref_input5","ref_input6","styles","container","input","email","nom","text","current","focus","prenom","numeroDeTelephone","cin","display","flexDirection","justifyContent","width","navigate","console","log","StyleSheet","create","flex","backgroundColor","alignItems","height","padding","borderWidth","borderColor","borderStyle","borderRadius"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\r\nimport { View, Text, TextInput, StyleSheet, Button } from 'react-native'\r\n\r\nexport default function EditUser({ route,navigation }) {\r\n    const [userToEdit, setuserToEdit] = useState(route.params.user)\r\n\r\n    const ref_input2 = useRef();\r\n    const ref_input3 = useRef();\r\n    const ref_input4 = useRef();\r\n    const ref_input5 = useRef();\r\n    const ref_input6 = useRef();\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text>ajouter un compte locataire</Text>\r\n\r\n            <View>\r\n                <TextInput style={styles.input}\r\n                    placeholder={userToEdit.email} \r\n                    label=\"Email\" \r\n                    value={\"\"}\r\n                    \r\n                />\r\n                <TextInput style={styles.input}\r\n                    placeholder=\"Nom\" \r\n                    label=\"Nom\" \r\n                    value={userToEdit.nom}\r\n                    onChangeText={(text) => {\r\n                        setuserToEdit({...userToEdit,nom:text})\r\n                    }}\r\n                    autoFocus={true}\r\n                    ref={ref_input2}\r\n                    onSubmitEditing={() => ref_input3.current.focus()}\r\n\r\n                    // ref={ref_input3}\r\n                    // onSubmitEditing={() => ref_input4.current.focus()} \r\n                />\r\n                <TextInput style={styles.input}\r\n                    placeholder=\"Prenom\" \r\n                    label=\"Prenom\" \r\n                    value={userToEdit.prenom}\r\n                    onChangeText={(text) => {\r\n                        setuserToEdit({...userToEdit,prenom:text})\r\n                    }}\r\n                    ref={ref_input3}\r\n                    onSubmitEditing={() => ref_input4.current.focus()}\r\n                />\r\n                <TextInput style={styles.input}\r\n                    placeholder=\"Numero De Telephone\" \r\n                    label=\"Numero De Telephone\" \r\n                    value={userToEdit.numeroDeTelephone}\r\n                    onChangeText={(text) => {\r\n                        setuserToEdit({...userToEdit,numeroDeTelephone:text})\r\n                    }}\r\n                    ref={ref_input4}\r\n                    onSubmitEditing={() => ref_input5.current.focus()}\r\n                />\r\n                <TextInput style={styles.input}\r\n                    placeholder=\"CIN\" \r\n                    label=\"CIN\" \r\n                    value={userToEdit.cin}\r\n                    onChangeText={(text) => {\r\n                        setuserToEdit({...userToEdit,cin:text})\r\n                    }}\r\n                    ref={ref_input5}\r\n                    \r\n                /> {/**/}\r\n            </View>\r\n            <View style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",width:\"80%\"}}>\r\n                <Button\r\n                    title=\"retour\"\r\n                    onPress={() =>{navigation.navigate('SelectUser')}\r\n                    // navigation.navigate('Home')\r\n                    }\r\n                />\r\n                <Button\r\n                    title=\"Confirmer\"\r\n                    onPress={() =>{console.log(userToEdit)}\r\n                    // navigation.navigate('Home')\r\n                    }\r\n                />    \r\n            </View>\r\n            \r\n            {/* <View></View>  */}\r\n        </View>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n    },\r\n    input: {\r\n        width: 300,\r\n        height: 40,\r\n        padding: 5,\r\n        borderWidth: 1,\r\n        borderColor: 'grey',\r\n        borderStyle: 'solid',\r\n        borderRadius: 3\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}