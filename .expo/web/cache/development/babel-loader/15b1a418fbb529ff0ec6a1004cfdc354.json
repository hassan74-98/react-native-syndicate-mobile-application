{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\dropshipping\\\\mobile developpement\\\\bentriaa\\\\screens\\\\Home.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { TheContextConsumer } from \"../context/context\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { TextInput } from 'react-native-gesture-handler';\nimport { fireStore } from \"../firebase/firebase\";\nexport default function Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(new Date(1598051730000)),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState('date'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mode = _useState4[0],\n      setMode = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      show = _useState6[0],\n      setShow = _useState6[1];\n\n  var handleOnChange = function handleOnChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(Platform.OS === 'ios');\n    setDate(currentDate);\n  };\n\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  var showDatepicker = function showDatepicker() {\n    showMode('date');\n  };\n\n  var LogTheDate = function LogTheDate(e) {\n    fireStore.collection('testDate').get().then(function (snapshot) {\n      snapshot.docs.map(function (doc) {\n        console.log(\"TimeStamp to date\", new Date(doc.data().date.seconds));\n      });\n    });\n    fireStore.collection('testDate').add({\n      date: date\n    });\n    console.log(date);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: \"red\"\n    },\n    onPress: function onPress(e) {\n      console.log('test');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"click on me\")), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    onPress: showDatepicker,\n    title: \"Show date picker!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    onPress: LogTheDate,\n    title: \"log date!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  })), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Date\",\n    label: \"Date\",\n    value: date,\n    onChangeText: function onChangeText(text) {\n      setuser(_objectSpread(_objectSpread({}, user), {}, {\n        email: text\n      }));\n    },\n    onPress: showDatepicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }), show && React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    value: date,\n    mode: mode,\n    is24Hour: true,\n    display: \"default\",\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })), React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      padding: 10,\n      fontSize: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Bienvenu!\", \"\\n\", \"\\n\", \"Nous avons besoin de votre aide pour ajouter les comptes des locataires \", \"\\n\", \"\\n\", \"\\n\", \"\\n\", React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      padding: 10,\n      fontSize: 60\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \" \\uD83D\\uDC77 \")), React.createElement(Button, {\n    title: \"Commencer\",\n    onPress: function onPress() {\n      return navigation.navigate('Login');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  }\n});","map":{"version":3,"sources":["D:/dropshipping/mobile developpement/bentriaa/screens/Home.js"],"names":["React","useEffect","useState","TheContextConsumer","DateTimePicker","TextInput","fireStore","Home","navigation","Date","date","setDate","mode","setMode","show","setShow","handleOnChange","event","selectedDate","currentDate","Platform","OS","showMode","currentMode","showDatepicker","LogTheDate","e","collection","get","then","snapshot","docs","map","doc","console","log","data","seconds","add","styles","container","backgroundColor","input","text","setuser","user","email","textAlign","padding","fontSize","navigate","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { StyleSheet,View, Text, Button } from 'react-native'\r\nimport { TheContextConsumer } from '../context/context';\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\nimport { fireStore } from '../firebase/firebase';\r\n\r\nexport default function Home({ navigation }) {\r\n    const [date, setDate] = useState(new Date(1598051730000));\r\n    const [mode, setMode] = useState('date');\r\n    const [show, setShow] = useState(false);\r\n    const handleOnChange = (event, selectedDate) => {\r\n        const currentDate = selectedDate || date;\r\n        setShow(Platform.OS === 'ios');\r\n        setDate(currentDate);\r\n    };\r\n\r\n    const showMode = (currentMode) => {\r\n    setShow(true);\r\n    setMode(currentMode);\r\n    };\r\n\r\n    const showDatepicker = () => {\r\n    showMode('date');\r\n    };\r\n\r\n    const LogTheDate = (e) => {\r\n        fireStore.collection('testDate').get().then((snapshot)=>{\r\n            snapshot.docs.map((doc)=>{\r\n                console.log(\"TimeStamp to date\",new Date(doc.data().date.seconds))\r\n            })\r\n        })\r\n        fireStore.collection('testDate').add({\r\n            date : date\r\n        })\r\n        console.log(date)\r\n    \r\n    };\r\n    return (\r\n\r\n        <View style={styles.container}>\r\n            <View style={{backgroundColor:\"red\"}} onPress={(e)=>{console.log('test')}}>\r\n                <Text>click on me</Text>\r\n            </View>\r\n            <View>\r\n                <View>\r\n                    <Button onPress={showDatepicker} title=\"Show date picker!\" />\r\n                </View>\r\n                <View>\r\n                    <Button onPress={LogTheDate} title=\"log date!\" />\r\n                </View>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Date\" \r\n                    label=\"Date\" \r\n                    value={date}\r\n                    onChangeText={(text) => {setuser({...user,email:text})}}\r\n                    onPress={showDatepicker}\r\n                />\r\n                {show && (\r\n                <DateTimePicker\r\n                    testID=\"dateTimePicker\"\r\n                    value={date}\r\n                    mode={mode}\r\n                    is24Hour={true}\r\n                    display=\"default\"\r\n                    onChange={handleOnChange}\r\n                />\r\n                )}\r\n            </View>\r\n            {/* <Text>Home Page</Text> */}\r\n            \r\n            <Text style={{textAlign:\"center\",padding:10,fontSize:20}}>\r\n\r\n                Bienvenu!{\"\\n\"}{\"\\n\"}\r\n                Nous avons besoin de votre aide pour ajouter les comptes des locataires {\"\\n\"}{\"\\n\"}{\"\\n\"}{\"\\n\"}\r\n                <Text style={{textAlign:\"center\",padding:10,fontSize:60}}> 👷 </Text>\r\n            </Text>\r\n            <Button\r\n                title=\"Commencer\"\r\n                onPress={() =>\r\n                    navigation.navigate('Login')\r\n                }\r\n            />\r\n            <View></View>\r\n        </View>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n    },\r\n  });"]},"metadata":{},"sourceType":"module"}