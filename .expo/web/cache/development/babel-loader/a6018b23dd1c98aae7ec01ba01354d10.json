{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\dropshipping\\\\mobile developpement\\\\bentriaa\\\\screens\\\\AddUser.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useRef, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { TextInput, TouchableOpacity } from 'react-native-gesture-handler';\nimport { TheContextConsumer } from \"../context/context\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { auThentication, fireStore } from \"../firebase/firebase\";\nexport default function AddUser(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    email: \"\",\n    password: \"123456\",\n    nom: \"\",\n    prenom: \"\",\n    numeroDeTelephone: \"\",\n    cin: \"\",\n    proprietaireDe: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      userToAdd = _useState2[0],\n      setuserToAdd = _useState2[1];\n\n  var handleAddAppartement = function handleAddAppartement() {\n    setuserToAdd(_objectSpread(_objectSpread({}, userToAdd), userToAdd.proprietaireDe.push({\n      titreFoncier: \"\",\n      DateDeSignatureDuContrat: \"\",\n      NomDuNotaire: \"\",\n      NAppartement: \"\",\n      Immeuble: \"\"\n    })));\n  };\n\n  var _useState3 = useState(-1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      role = _useState4[0],\n      setrole = _useState4[1];\n\n  var myRefs = useRef([]);\n  var myRefs2 = useRef([]);\n\n  var _useState5 = useState('date'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mode = _useState6[0],\n      setMode = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      show = _useState8[0],\n      setShow = _useState8[1];\n\n  var handleDatePickerOnChange = function handleDatePickerOnChange(selectedDate, index, key) {\n    var NewObject = _objectSpread({}, userToAdd);\n\n    NewObject[\"proprietaireDe\"][index][key] = new Date(JSON.stringify(selectedDate).split('\"')[1].split('T')[0]);\n    return NewObject;\n  };\n\n  var showMode = function showMode(currentMode) {\n    setMode(currentMode);\n  };\n\n  var showDatepicker = function showDatepicker(x) {\n    showMode('date');\n    setrole(x);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var verfied = true;\n\n    if (!userToAdd[\"proprietaireDe\"][0]) {\n      verfied = false;\n      Alert.alert(\"Champ maquant:\", \"Veuillez ajouter au moins un appartement.\" + userToAdd[\"proprietaireDe\"].length.toString());\n    }\n\n    Object.keys(userToAdd).map(function (key, i) {\n      if (key.toString() === \"proprietaireDe\") {\n        userToAdd[key].map(function (appartement, appI) {\n          Object.keys(appartement).map(function (appKey) {\n            if (appartement[appKey] === \"\") {\n              Alert.alert(\"Champ manquant:\", appKey.toString() + \"\\n\" + \"(Appartement : \" + (appI + 1) + \")\");\n              verfied = false;\n            }\n          });\n        });\n      } else {\n        if (userToAdd[key] === \"\") {\n          Alert.alert(\"Champ manquant:\", key.toString());\n          verfied = false;\n        }\n      }\n    });\n\n    if (verfied === true) {\n      auThentication.createUserWithEmailAndPassword(userToAdd.email, userToAdd.password).then(function (Credentials) {\n        fireStore.collection(\"users\").doc(Credentials.user.uid).set(userToAdd).catch(function (e) {\n          Alert.alert(e.toString());\n        }).catch(function (e) {\n          return Alert.alert(e.toString());\n        });\n      }).then(function () {\n        Alert.alert(userToAdd.email, \"ajouté 👍\");\n        setuserToAdd({\n          email: \"\",\n          password: \"123456\",\n          nom: \"\",\n          prenom: \"\",\n          numeroDeTelephone: \"\",\n          cin: \"\",\n          proprietaireDe: []\n        });\n      }).catch(function (e) {\n        return Alert.alert(e.toString());\n      });\n    }\n  };\n\n  return React.createElement(TheContextConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, function (value) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, \"ajouter un compte locataire\"), React.createElement(ScrollView, {\n      style: {\n        backgroundColor: \"grey\",\n        width: \"100%\",\n        height: \"50%\",\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 37\n      }\n    }, \"infos personelles\"), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 37\n      }\n    }, Object.keys(userToAdd).map(function (key, i) {\n      if (key !== \"proprietaireDe\" && key !== \"password\") {\n        return React.createElement(View, {\n          key: i,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 53\n          }\n        }, React.createElement(TextInput, {\n          style: styles.input,\n          placeholder: key,\n          label: key,\n          value: userToAdd[key],\n          onChangeText: function onChangeText(text) {\n            setuserToAdd(function (prev) {\n              var New = _objectSpread({}, prev);\n\n              New[key] = text;\n              return New;\n            });\n          },\n          ref: function ref(tag) {\n            return myRefs.current[i] = tag;\n          },\n          onSubmitEditing: function onSubmitEditing() {\n            for (var t = 1; t < myRefs.current.length - i; t++) {\n              if (myRefs.current[i + t]) {\n                myRefs.current[i + t].focus();\n                break;\n              }\n            }\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 57\n          }\n        }));\n      }\n    })), userToAdd[\"proprietaireDe\"].map(function (appartement, index) {\n      return React.createElement(View, {\n        key: index,\n        style: {\n          backgroundColor: \"yellow\",\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 45\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 49\n        }\n      }, \" Appartement \", index + 1, \" \"), React.createElement(Button, {\n        title: \"annuler\",\n        onPress: function onPress() {\n          if (index > -1) {\n            var n = userToAdd[\"proprietaireDe\"];\n            n.splice(index, 1);\n            setuserToAdd(_objectSpread(_objectSpread({}, userToAdd), {}, {\n              proprietaireDe: n\n            }));\n          }\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 53\n        }\n      }), Object.keys(appartement).map(function (key, i) {\n        if (key !== \"DateDeSignatureDuContrat\") {\n          return React.createElement(View, {\n            key: i,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 61\n            }\n          }, React.createElement(Text, {\n            key: i,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 65\n            }\n          }, key, \" \"), React.createElement(TextInput, {\n            ref: function ref(tag) {\n              return myRefs2.current[i] = tag;\n            },\n            style: styles.input,\n            placeholder: key,\n            value: appartement[key],\n            onChangeText: function onChangeText(text) {\n              var NewObject = _objectSpread({}, userToAdd);\n\n              userToAdd[\"proprietaireDe\"][index][key] = text;\n              setuserToAdd(NewObject);\n            },\n            onSubmitEditing: function onSubmitEditing() {\n              for (var t = 1; t < myRefs2.current.length - i; t++) {\n                if (myRefs2.current[i + t]) {\n                  myRefs2.current[i + t].focus();\n                  break;\n                }\n              }\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 65\n            }\n          }));\n        } else {\n          return React.createElement(TouchableOpacity, {\n            style: {\n              display: \"flex\",\n              flexDirection: \"row\",\n              backgroundColor: \"red\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            },\n            onPress: function onPress() {\n              return showDatepicker(index);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 61\n            }\n          }, React.createElement(Text, {\n            style: {\n              width: 300,\n              height: 40,\n              padding: 5,\n              marginVertical: 10,\n              borderColor: 'grey',\n              borderStyle: 'solid',\n              borderRadius: 3,\n              backgroundColor: \"white\",\n              textAlignVertical: \"center\",\n              textAlign: \"center\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 65\n            }\n          }, typeof appartement[key] === \"string\" ? React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 113\n            }\n          }, \"date \\\"Click pour selectionner une date\\\" \") : React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 171\n            }\n          }, JSON.stringify(appartement[key]).split('\"')[1].split(\"T\")[0])), role === index && React.createElement(View, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 69\n            }\n          }, React.createElement(DateTimePicker, {\n            testID: key.toString(),\n            value: appartement[key] || new Date(1577883600000),\n            mode: mode,\n            is24Hour: true,\n            display: \"default\",\n            onChange: function onChange(event, selectedDate) {\n              if (selectedDate) {\n                setrole(-1);\n                setShow(Platform.OS === 'ios');\n                setuserToAdd(handleDatePickerOnChange(selectedDate, index, key));\n              } else {\n                setrole(-1);\n              }\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 73\n            }\n          })));\n        }\n      }));\n    }), React.createElement(Button, {\n      title: \"ajouter un appartement\",\n      onPress: function onPress() {\n        handleAddAppartement();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 37\n      }\n    })), React.createElement(Button, {\n      title: \"Ajouter\",\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 29\n      }\n    }), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 29\n      }\n    }));\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  input: {\n    width: 300,\n    height: 40,\n    padding: 5,\n    marginVertical: 10,\n    marginHorizontal: 30,\n    borderWidth: 1,\n    borderColor: 'grey',\n    borderStyle: 'solid',\n    borderRadius: 3,\n    backgroundColor: \"white\"\n  }\n});","map":{"version":3,"sources":["D:/dropshipping/mobile developpement/bentriaa/screens/AddUser.js"],"names":["React","useRef","useState","TextInput","TouchableOpacity","TheContextConsumer","DateTimePicker","auThentication","fireStore","AddUser","navigation","email","password","nom","prenom","numeroDeTelephone","cin","proprietaireDe","userToAdd","setuserToAdd","handleAddAppartement","push","titreFoncier","DateDeSignatureDuContrat","NomDuNotaire","NAppartement","Immeuble","role","setrole","myRefs","myRefs2","mode","setMode","show","setShow","handleDatePickerOnChange","selectedDate","index","key","NewObject","Date","JSON","stringify","split","showMode","currentMode","showDatepicker","x","handleSubmit","verfied","Alert","alert","length","toString","Object","keys","map","i","appartement","appI","appKey","createUserWithEmailAndPassword","then","Credentials","collection","doc","user","uid","set","catch","e","value","styles","container","backgroundColor","width","height","textAlign","input","text","prev","New","tag","current","t","focus","n","splice","display","flexDirection","alignItems","justifyContent","padding","marginVertical","borderColor","borderStyle","borderRadius","textAlignVertical","event","Platform","OS","StyleSheet","create","flex","marginHorizontal","borderWidth"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;;;;;;;AAEA,SAASC,SAAT,EAAoBC,gBAApB,QAA4C,8BAA5C;AAEA,SAASC,kBAAT;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,SAASC,cAAT,EAAyBC,SAAzB;AACA,eAAe,SAASC,OAAT,OAAiC;AAAA;;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAAA,kBAEVR,QAAQ,CAAC;AACvCS,IAAAA,KAAK,EAAC,EADiC;AAEvCC,IAAAA,QAAQ,EAAC,QAF8B;AAGvCC,IAAAA,GAAG,EAAC,EAHmC;AAIvCC,IAAAA,MAAM,EAAC,EAJgC;AAKvCC,IAAAA,iBAAiB,EAAC,EALqB;AAMvCC,IAAAA,GAAG,EAAC,EANmC;AAOvCC,IAAAA,cAAc,EAAC;AAPwB,GAAD,CAFE;AAAA;AAAA,MAErCC,SAFqC;AAAA,MAE1BC,YAF0B;;AAc5C,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAC/BD,IAAAA,YAAY,iCAAKD,SAAL,GAAkBA,SAAS,CAACD,cAAV,CAAyBI,IAAzB,CAC1B;AACIC,MAAAA,YAAY,EAAC,EADjB;AAEIC,MAAAA,wBAAwB,EAAG,EAF/B;AAGIC,MAAAA,YAAY,EAAG,EAHnB;AAIIC,MAAAA,YAAY,EAAG,EAJnB;AAKIC,MAAAA,QAAQ,EAAG;AALf,KAD0B,CAAlB,EAAZ;AASH,GAVD;;AAd4C,mBA8BpBxB,QAAQ,CAAC,CAAC,CAAF,CA9BY;AAAA;AAAA,MA8BrCyB,IA9BqC;AAAA,MA8B/BC,OA9B+B;;AAkC5C,MAAMC,MAAM,GAAE5B,MAAM,CAAC,EAAD,CAApB;AACA,MAAM6B,OAAO,GAAE7B,MAAM,CAAC,EAAD,CAArB;;AAnC4C,mBAuCpBC,QAAQ,CAAC,MAAD,CAvCY;AAAA;AAAA,MAuCrC6B,IAvCqC;AAAA,MAuC/BC,OAvC+B;;AAAA,mBAwCpB9B,QAAQ,CAAC,KAAD,CAxCY;AAAA;AAAA,MAwCrC+B,IAxCqC;AAAA,MAwC/BC,OAxC+B;;AA0C5C,MAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,YAAD,EAAcC,KAAd,EAAoBC,GAApB,EAA4B;AAKzD,QAAIC,SAAS,qBAAOrB,SAAP,CAAb;;AACAqB,IAAAA,SAAS,CAAC,gBAAD,CAAT,CAA4BF,KAA5B,EAAmCC,GAAnC,IAA2C,IAAIE,IAAJ,CAASC,IAAI,CAACC,SAAL,CAAeN,YAAf,EAA6BO,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,EAA2CA,KAA3C,CAAiD,GAAjD,EAAsD,CAAtD,CAAT,CAA3C;AACA,WAAOJ,SAAP;AACH,GARD;;AASA,MAAMK,QAAQ,GAAG,SAAXA,QAAW,CAACC,WAAD,EAAiB;AAC9Bb,IAAAA,OAAO,CAACa,WAAD,CAAP;AACH,GAFD;;AAGA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,CAAD,EAAO;AAC1BH,IAAAA,QAAQ,CAAC,MAAD,CAAR;AACAhB,IAAAA,OAAO,CAACmB,CAAD,CAAP;AACH,GAHD;;AAcA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,QAAIC,OAAO,GAAG,IAAd;;AAEA,QAAG,CAAC/B,SAAS,CAAC,gBAAD,CAAT,CAA4B,CAA5B,CAAJ,EAAmC;AAC/B+B,MAAAA,OAAO,GAAG,KAAV;AACAC,MAAAA,KAAK,CAACC,KAAN,CAAY,gBAAZ,EAA6B,8CAA4CjC,SAAS,CAAC,gBAAD,CAAT,CAA4BkC,MAA5B,CAAmCC,QAAnC,EAAzE;AACH;;AACDC,IAAAA,MAAM,CAACC,IAAP,CAAYrC,SAAZ,EAAuBsC,GAAvB,CAA2B,UAAClB,GAAD,EAAKmB,CAAL,EAAS;AAChC,UAAGnB,GAAG,CAACe,QAAJ,OAAmB,gBAAtB,EAAuC;AAEnCnC,QAAAA,SAAS,CAACoB,GAAD,CAAT,CAAekB,GAAf,CAAmB,UAACE,WAAD,EAAaC,IAAb,EAAoB;AACnCL,UAAAA,MAAM,CAACC,IAAP,CAAYG,WAAZ,EAAyBF,GAAzB,CAA6B,UAACI,MAAD,EAAU;AACnC,gBAAGF,WAAW,CAACE,MAAD,CAAX,KAAwB,EAA3B,EAA8B;AAC1BV,cAAAA,KAAK,CAACC,KAAN,CAAY,iBAAZ,EAA+BS,MAAM,CAACP,QAAP,KAAmB,IAAnB,GAAyB,iBAAzB,IAA8CM,IAAI,GAAC,CAAnD,IAAsD,GAArF;AACAV,cAAAA,OAAO,GAAG,KAAV;AACH;AACJ,WALD;AAMH,SAPD;AASH,OAXD,MAWK;AACD,YAAG/B,SAAS,CAACoB,GAAD,CAAT,KAAmB,EAAtB,EAAyB;AACrBY,UAAAA,KAAK,CAACC,KAAN,CAAY,iBAAZ,EAA8Bb,GAAG,CAACe,QAAJ,EAA9B;AACAJ,UAAAA,OAAO,GAAG,KAAV;AACH;AACJ;AAEJ,KAnBD;;AAoBA,QAAGA,OAAO,KAAG,IAAb,EAAkB;AAEd1C,MAAAA,cAAc,CAACsD,8BAAf,CAA8C3C,SAAS,CAACP,KAAxD,EAA8DO,SAAS,CAACN,QAAxE,EAAkFkD,IAAlF,CAAuF,UAACC,WAAD,EAAe;AAClGvD,QAAAA,SAAS,CAACwD,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCF,WAAW,CAACG,IAAZ,CAAiBC,GAAnD,EAAwDC,GAAxD,CAA4DlD,SAA5D,EAAuEmD,KAAvE,CAA6E,UAACC,CAAD,EAAK;AAC9EpB,UAAAA,KAAK,CAACC,KAAN,CAAYmB,CAAC,CAACjB,QAAF,EAAZ;AACH,SAFD,EAEGgB,KAFH,CAES,UAACC,CAAD;AAAA,iBAAKpB,KAAK,CAACC,KAAN,CAAYmB,CAAC,CAACjB,QAAF,EAAZ,CAAL;AAAA,SAFT;AAGH,OAJD,EAIGS,IAJH,CAIQ,YAAI;AACRZ,QAAAA,KAAK,CAACC,KAAN,CAAYjC,SAAS,CAACP,KAAtB,EAA4B,WAA5B;AACAQ,QAAAA,YAAY,CAAC;AACTR,UAAAA,KAAK,EAAC,EADG;AAETC,UAAAA,QAAQ,EAAC,QAFA;AAGTC,UAAAA,GAAG,EAAC,EAHK;AAITC,UAAAA,MAAM,EAAC,EAJE;AAKTC,UAAAA,iBAAiB,EAAC,EALT;AAMTC,UAAAA,GAAG,EAAC,EANK;AAOTC,UAAAA,cAAc,EAAC;AAPN,SAAD,CAAZ;AASH,OAfD,EAeGoD,KAfH,CAeS,UAACC,CAAD;AAAA,eAAKpB,KAAK,CAACC,KAAN,CAAYmB,CAAC,CAACjB,QAAF,EAAZ,CAAL;AAAA,OAfT;AAgBH;AAIJ,GAjDD;;AAmDA,SACI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACS,UAACkB,KAAD,EAAW;AACR,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,EAEI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAC,MAAjB;AAAwBC,QAAAA,KAAK,EAAC,MAA9B;AAAqCC,QAAAA,MAAM,EAAC,KAA5C;AAAkDC,QAAAA,SAAS,EAAC;AAA5D,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFR,EAIQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKvB,MAAM,CAACC,IAAP,CAAYrC,SAAZ,EAAuBsC,GAAvB,CAA2B,UAAClB,GAAD,EAAMmB,CAAN,EAAU;AAElC,UAAGnB,GAAG,KAAK,gBAAR,IAA4BA,GAAG,KAAK,UAAvC,EAAmD;AAC/C,eACI,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEmB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAEe,MAAM,CAACM,KAAzB;AACI,UAAA,WAAW,EAAExC,GADjB;AAEI,UAAA,KAAK,EAAEA,GAFX;AAGI,UAAA,KAAK,EAAEpB,SAAS,CAACoB,GAAD,CAHpB;AAII,UAAA,YAAY,EAAE,sBAACyC,IAAD,EAAU;AACpB5D,YAAAA,YAAY,CAAC,UAAC6D,IAAD,EAAQ;AACjB,kBAAIC,GAAG,qBAAOD,IAAP,CAAP;;AACAC,cAAAA,GAAG,CAAC3C,GAAD,CAAH,GAAWyC,IAAX;AACA,qBAAOE,GAAP;AACH,aAJW,CAAZ;AAKH,WAVL;AAWI,UAAA,GAAG,EAAE,aAAAC,GAAG;AAAA,mBAAKrD,MAAM,CAACsD,OAAP,CAAe1B,CAAf,IAAoByB,GAAzB;AAAA,WAXZ;AAaI,UAAA,eAAe,EAAE,2BAAM;AAEnB,iBAAI,IAAIE,CAAC,GAAG,CAAZ,EAAgBA,CAAC,GAAEvD,MAAM,CAACsD,OAAP,CAAe/B,MAAf,GAAwBK,CAA3C,EAAgD2B,CAAC,EAAjD,EAAqD;AACjD,kBAAGvD,MAAM,CAACsD,OAAP,CAAe1B,CAAC,GAAC2B,CAAjB,CAAH,EAAuB;AACnBvD,gBAAAA,MAAM,CAACsD,OAAP,CAAe1B,CAAC,GAAC2B,CAAjB,EAAoBC,KAApB;AACA;AACH;AAEJ;AACJ,WAtBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ;AA6BH;AAGJ,KAnCA,CAFL,CAJR,EA2CSnE,SAAS,CAAC,gBAAD,CAAT,CAA4BsC,GAA5B,CAAgC,UAACE,WAAD,EAAarB,KAAb,EAAsB;AAEnD,aACI,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,KAAX;AAAkB,QAAA,KAAK,EAAE;AAACqC,UAAAA,eAAe,EAAC,QAAjB;AAA0BG,UAAAA,SAAS,EAAC;AAApC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAqBxC,KAAK,GAAC,CAA3B,MADJ,EAEQ,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,SADV;AAEI,QAAA,OAAO,EAAE,mBAAI;AAET,cAAGA,KAAK,GAAG,CAAC,CAAZ,EAAc;AACV,gBAAIiD,CAAC,GAAEpE,SAAS,CAAC,gBAAD,CAAhB;AACAoE,YAAAA,CAAC,CAACC,MAAF,CAASlD,KAAT,EAAe,CAAf;AACAlB,YAAAA,YAAY,iCAAKD,SAAL;AAAeD,cAAAA,cAAc,EAACqE;AAA9B,eAAZ;AACH;AACJ,SATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR,EAeKhC,MAAM,CAACC,IAAP,CAAYG,WAAZ,EAAyBF,GAAzB,CAA6B,UAAClB,GAAD,EAAMmB,CAAN,EAAU;AACpC,YAAGnB,GAAG,KAAK,0BAAX,EAAsC;AAClC,iBACI,oBAAC,IAAD;AAAM,YAAA,GAAG,EAAEmB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,IAAD;AAAM,YAAA,GAAG,EAAEA,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAenB,GAAf,MADJ,EAEI,oBAAC,SAAD;AACI,YAAA,GAAG,EAAE,aAAA4C,GAAG;AAAA,qBAAKpD,OAAO,CAACqD,OAAR,CAAgB1B,CAAhB,IAAqByB,GAA1B;AAAA,aADZ;AAEI,YAAA,KAAK,EAAEV,MAAM,CAACM,KAFlB;AAGI,YAAA,WAAW,EAAExC,GAHjB;AAII,YAAA,KAAK,EAAEoB,WAAW,CAACpB,GAAD,CAJtB;AAKI,YAAA,YAAY,EAAE,sBAACyC,IAAD,EAAU;AACpB,kBAAIxC,SAAS,qBAAOrB,SAAP,CAAb;;AACAA,cAAAA,SAAS,CAAC,gBAAD,CAAT,CAA4BmB,KAA5B,EAAmCC,GAAnC,IAA0CyC,IAA1C;AACA5D,cAAAA,YAAY,CAACoB,SAAD,CAAZ;AACH,aATL;AAUI,YAAA,eAAe,EAAE,2BAAM;AAEnB,mBAAI,IAAI6C,CAAC,GAAG,CAAZ,EAAgBA,CAAC,GAAEtD,OAAO,CAACqD,OAAR,CAAgB/B,MAAhB,GAAyBK,CAA5C,EAAiD2B,CAAC,EAAlD,EAAsD;AAClD,oBAAGtD,OAAO,CAACqD,OAAR,CAAgB1B,CAAC,GAAC2B,CAAlB,CAAH,EAAwB;AACpBtD,kBAAAA,OAAO,CAACqD,OAAR,CAAgB1B,CAAC,GAAC2B,CAAlB,EAAqBC,KAArB;AACA;AACH;AAEJ;AACJ,aAnBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CADJ;AA4BH,SA7BD,MA6BK;AACD,iBAEI,oBAAC,gBAAD;AAAkB,YAAA,KAAK,EAAE;AAACG,cAAAA,OAAO,EAAC,MAAT;AAAgBC,cAAAA,aAAa,EAAC,KAA9B;AAAoCf,cAAAA,eAAe,EAAC,KAApD;AAA0DgB,cAAAA,UAAU,EAAC,QAArE;AAA8EC,cAAAA,cAAc,EAAC;AAA7F,aAAzB;AAAiI,YAAA,OAAO,EAAE;AAAA,qBAAI7C,cAAc,CAACT,KAAD,CAAlB;AAAA,aAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAGI,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAACsC,cAAAA,KAAK,EAAE,GAAR;AAAYC,cAAAA,MAAM,EAAE,EAApB;AAAuBgB,cAAAA,OAAO,EAAE,CAAhC;AAAkCC,cAAAA,cAAc,EAAE,EAAlD;AAAqDC,cAAAA,WAAW,EAAE,MAAlE;AAAyEC,cAAAA,WAAW,EAAE,OAAtF;AAA8FC,cAAAA,YAAY,EAAE,CAA5G;AAA8GtB,cAAAA,eAAe,EAAC,OAA9H;AAAsIuB,cAAAA,iBAAiB,EAAC,QAAxJ;AAAiKpB,cAAAA,SAAS,EAAC;AAA3K,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACM,OAAOnB,WAAW,CAACpB,GAAD,CAAlB,KAA6B,QAA9B,GAA2C,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAA3C,GAAqG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOG,IAAI,CAACC,SAAL,CAAegB,WAAW,CAACpB,GAAD,CAA1B,EAAiCK,KAAjC,CAAuC,GAAvC,EAA4C,CAA5C,EAA+CA,KAA/C,CAAqD,GAArD,EAA0D,CAA1D,CAAP,CAD1G,CAHJ,EAOMhB,IAAI,KAAKU,KAAV,IAEG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEI,oBAAC,cAAD;AACI,YAAA,MAAM,EAAEC,GAAG,CAACe,QAAJ,EADZ;AAEI,YAAA,KAAK,EAAEK,WAAW,CAACpB,GAAD,CAAX,IAAoB,IAAIE,IAAJ,CAAS,aAAT,CAF/B;AAGI,YAAA,IAAI,EAAET,IAHV;AAKI,YAAA,QAAQ,EAAE,IALd;AAMI,YAAA,OAAO,EAAC,SANZ;AAOI,YAAA,QAAQ,EAAE,kBAACmE,KAAD,EAAQ9D,YAAR,EAAyB;AAE/B,kBAAGA,YAAH,EAAgB;AACZR,gBAAAA,OAAO,CAAC,CAAC,CAAF,CAAP;AACAM,gBAAAA,OAAO,CAACiE,QAAQ,CAACC,EAAT,KAAgB,KAAjB,CAAP;AACAjF,gBAAAA,YAAY,CAACgB,wBAAwB,CAACC,YAAD,EAAcC,KAAd,EAAoBC,GAApB,CAAzB,CAAZ;AACH,eAJD,MAIK;AACDV,gBAAAA,OAAO,CAAC,CAAC,CAAF,CAAP;AACH;AAEJ,aAjBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CATR,CAFJ;AAyCH;AAEJ,OA1EA,CAfL,CADJ;AAgGH,KAlGA,CA3CT,EA8IQ,oBAAC,MAAD;AACI,MAAA,KAAK,EAAC,wBADV;AAEI,MAAA,OAAO,EAAE,mBAAK;AACVR,QAAAA,oBAAoB;AACvB,OAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9IR,CAFJ,EA0JI,oBAAC,MAAD;AACI,MAAA,KAAK,EAAC,SADV;AAEI,MAAA,OAAO,EAAE4B,YAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1JJ,EA8JI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9JJ,CADJ;AAkKH,GApKT,CADJ;AA4KH;AAGD,IAAMwB,MAAM,GAAG6B,UAAU,CAACC,MAAX,CAAkB;AAC7B7B,EAAAA,SAAS,EAAE;AACT8B,IAAAA,IAAI,EAAE,CADG;AAET7B,IAAAA,eAAe,EAAE,MAFR;AAGTgB,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADkB;AAO7Bb,EAAAA,KAAK,EAAE;AACHH,IAAAA,KAAK,EAAE,GADJ;AAEHC,IAAAA,MAAM,EAAE,EAFL;AAGHgB,IAAAA,OAAO,EAAE,CAHN;AAIHC,IAAAA,cAAc,EAAE,EAJb;AAKHW,IAAAA,gBAAgB,EAAE,EALf;AAMHC,IAAAA,WAAW,EAAE,CANV;AAOHX,IAAAA,WAAW,EAAE,MAPV;AAQHC,IAAAA,WAAW,EAAE,OARV;AASHC,IAAAA,YAAY,EAAE,CATX;AAUHtB,IAAAA,eAAe,EAAC;AAVb;AAPsB,CAAlB,CAAf","sourcesContent":["import React, { useRef, useState } from 'react'\r\nimport { StyleSheet,View, Text, Button, Alert, ScrollView } from 'react-native'\r\nimport { TextInput, TouchableOpacity } from 'react-native-gesture-handler'\r\n\r\nimport { TheContextConsumer } from '../context/context';\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\nimport { auThentication, fireStore } from '../firebase/firebase';\r\nexport default function AddUser({ navigation }) {\r\n    // Usr Infos \r\n    const [userToAdd, setuserToAdd] = useState({\r\n        email:\"\",\r\n        password:\"123456\",\r\n        nom:\"\",\r\n        prenom:\"\",\r\n        numeroDeTelephone:\"\",\r\n        cin:\"\",\r\n        proprietaireDe:[]\r\n    })\r\n    //++++++++++++++++++++++++++++++++++++++++++++++++ \r\n\r\n    // add appartement to appatements\r\n    const handleAddAppartement = () => {\r\n        setuserToAdd({...userToAdd,...userToAdd.proprietaireDe.push(\r\n            {\r\n                titreFoncier:\"\",\r\n                DateDeSignatureDuContrat : \"\",\r\n                NomDuNotaire : \"\",\r\n                NAppartement : \"\",\r\n                Immeuble : \"\",\r\n            }\r\n        )})\r\n    }\r\n    \r\n    // ++++++++++++++++++++++++++++\r\n\r\n\r\n    // Triggers to show date-pickers\r\n    const [role, setrole] = useState(-1)\r\n    //+++++++++++++++++++++++++++++\r\n\r\n    // input Refs To focus on next input automatically\r\n    const myRefs= useRef([]);\r\n    const myRefs2= useRef([]);\r\n    // +++++++++++++++++++++++++++++++++++++++++++++++\r\n\r\n    // date picker parameters and functions\r\n    const [mode, setMode] = useState('date');\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleDatePickerOnChange = (selectedDate,index,key) => {\r\n\r\n        // let mySelectedDate = new Date(selectedDate)\r\n        // Alert.alert(JSON.stringify(selectedDate),mySelectedDate.getFullYear()+\" / \"+mySelectedDate.getMonth()+\" / \"+mySelectedDate.getDate()+\"\\n\"+(new Date(JSON.stringify(selectedDate).split('\"')[1].split('T')[0])).toString())\r\n        // let NewSelectedDate = new Date(mySelectedDate.getFullYear(),mySelectedDate.getMonth(),mySelectedDate.getDate());\r\n        let NewObject = {...userToAdd}\r\n        NewObject[\"proprietaireDe\"][index][key] = (new Date(JSON.stringify(selectedDate).split('\"')[1].split('T')[0]));\r\n        return(NewObject)\r\n    }\r\n    const showMode = (currentMode) => {\r\n        setMode(currentMode);\r\n    };\r\n    const showDatepicker = (x) => {\r\n        showMode('date');\r\n        setrole(x)\r\n    };\r\n    // +++++++++++++++++++++++++++++++++++++++++++++++\r\n\r\n\r\n    \r\n    \r\n\r\n    \r\n    \r\n    \r\n    \r\n    const handleSubmit = () => {\r\n        let verfied = true;\r\n        \r\n        if(!userToAdd[\"proprietaireDe\"][0]){\r\n            verfied = false;\r\n            Alert.alert(\"Champ maquant:\",\"Veuillez ajouter au moins un appartement.\"+userToAdd[\"proprietaireDe\"].length.toString())\r\n        }\r\n        Object.keys(userToAdd).map((key,i)=>{\r\n            if(key.toString() === \"proprietaireDe\"){\r\n                \r\n                userToAdd[key].map((appartement,appI)=>{\r\n                    Object.keys(appartement).map((appKey)=>{\r\n                        if(appartement[appKey] === \"\"){\r\n                            Alert.alert(\"Champ manquant:\", appKey.toString() +\"\\n\"+ \"(Appartement : \" + (appI+1)+\")\")\r\n                            verfied = false\r\n                        }\r\n                    })\r\n                })\r\n                \r\n            }else{\r\n                if(userToAdd[key] === \"\"){\r\n                    Alert.alert(\"Champ manquant:\",key.toString())\r\n                    verfied = false;\r\n                }\r\n            }\r\n\r\n        })\r\n        if(verfied===true){\r\n\r\n            auThentication.createUserWithEmailAndPassword(userToAdd.email,userToAdd.password).then((Credentials)=>{\r\n                fireStore.collection(\"users\").doc(Credentials.user.uid).set(userToAdd).catch((e)=>{\r\n                    Alert.alert(e.toString());\r\n                }).catch((e)=>Alert.alert(e.toString()))\r\n            }).then(()=>{\r\n                Alert.alert(userToAdd.email,\"ajouté 👍\");\r\n                setuserToAdd({\r\n                    email:\"\",\r\n                    password:\"123456\",\r\n                    nom:\"\",\r\n                    prenom:\"\",\r\n                    numeroDeTelephone:\"\",\r\n                    cin:\"\",\r\n                    proprietaireDe:[]\r\n                })\r\n            }).catch((e)=>Alert.alert(e.toString()))\r\n        }\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        <TheContextConsumer>\r\n                {(value) => {\r\n                    return(\r\n                        <View style={styles.container}>\r\n                            <Text>ajouter un compte locataire</Text>\r\n                            <ScrollView style={{backgroundColor:\"grey\",width:\"100%\",height:\"50%\",textAlign:\"center\"}}>\r\n                                \r\n                                    <Text>infos personelles</Text>\r\n                                    \r\n                                    <View>\r\n                                        \r\n                                        {Object.keys(userToAdd).map((key, i)=>{\r\n                                            \r\n                                            if(key !== \"proprietaireDe\" && key !== \"password\" ){\r\n                                                return(\r\n                                                    <View key={i}>\r\n                                                        {/* <Text>{key.toString()} </Text> */}\r\n                                                        <TextInput style={styles.input}\r\n                                                            placeholder={key} \r\n                                                            label={key}\r\n                                                            value={userToAdd[key]}\r\n                                                            onChangeText={(text) => {\r\n                                                                setuserToAdd((prev)=>{\r\n                                                                    let New = {...prev}\r\n                                                                    New[key] = text\r\n                                                                    return(New)\r\n                                                                }) \r\n                                                            }}\r\n                                                            ref={tag => (myRefs.current[i] = tag)} \r\n                                                            \r\n                                                            onSubmitEditing={() => {\r\n                                                                \r\n                                                                for(let t = 1 ; t<(myRefs.current.length - i) ; t++ ){\r\n                                                                    if(myRefs.current[i+t]){\r\n                                                                        myRefs.current[i+t].focus();\r\n                                                                        break \r\n                                                                    }\r\n                                                                    \r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </View>\r\n                                                )        \r\n                                            }\r\n                                            \r\n                                            \r\n                                        })}\r\n                                    </View>\r\n                                    {userToAdd[\"proprietaireDe\"].map((appartement,index) =>{\r\n                                        \r\n                                        return(\r\n                                            <View key={index} style={{backgroundColor:\"yellow\",textAlign:\"center\"}}>\r\n                                                <Text > Appartement {index+1} </Text>\r\n                                                    <Button\r\n                                                        title=\"annuler\"\r\n                                                        onPress={()=>{\r\n                                                            \r\n                                                            if(index > -1){\r\n                                                                let n =userToAdd[\"proprietaireDe\"]\r\n                                                                n.splice(index,1)\r\n                                                                setuserToAdd({...userToAdd,proprietaireDe:n})\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n                                                \r\n\r\n                                                {Object.keys(appartement).map((key, i)=>{\r\n                                                    if(key !== \"DateDeSignatureDuContrat\"){\r\n                                                        return(\r\n                                                            <View key={i} >\r\n                                                                <Text key={i}>{key} </Text>\r\n                                                                <TextInput\r\n                                                                    ref={tag => (myRefs2.current[i] = tag)} \r\n                                                                    style={styles.input}\r\n                                                                    placeholder={key}\r\n                                                                    value={appartement[key]}\r\n                                                                    onChangeText={(text) => {\r\n                                                                        let NewObject = {...userToAdd}                                                        \r\n                                                                        userToAdd[\"proprietaireDe\"][index][key] = text;\r\n                                                                        setuserToAdd(NewObject);\r\n                                                                    }}\r\n                                                                    onSubmitEditing={() => {\r\n                                                                \r\n                                                                        for(let t = 1 ; t<(myRefs2.current.length - i) ; t++ ){\r\n                                                                            if(myRefs2.current[i+t]){\r\n                                                                                myRefs2.current[i+t].focus();\r\n                                                                                break \r\n                                                                            }\r\n                                                                            \r\n                                                                        }\r\n                                                                    }}\r\n                                                                    \r\n                                                                />\r\n                                                        \r\n                                                            </View>\r\n                                                        )   \r\n                                                    }else{\r\n                                                        return(\r\n                                                            \r\n                                                            <TouchableOpacity style={{display:\"flex\",flexDirection:\"row\",backgroundColor:\"red\",alignItems:\"center\",justifyContent:\"center\"}} onPress={()=>showDatepicker(index)}>\r\n\r\n\r\n                                                                <Text style={{width: 300,height: 40,padding: 5,marginVertical: 10,borderColor: 'grey',borderStyle: 'solid',borderRadius: 3,backgroundColor:\"white\",textAlignVertical:\"center\",textAlign:\"center\"}}>\r\n                                                                    {(typeof(appartement[key]) === \"string\") ? (<Text>date \"Click pour selectionner une date\" </Text>) : (<Text>{JSON.stringify(appartement[key]).split('\"')[1].split(\"T\")[0]}</Text>)}\r\n                                                                </Text>\r\n                                                                \r\n                                                                {(role === index) && (\r\n                                                                \r\n                                                                    <View>\r\n                                                                        \r\n                                                                        <DateTimePicker\r\n                                                                            testID={key.toString()}\r\n                                                                            value={appartement[key] || new Date(1577883600000)}\r\n                                                                            mode={mode}\r\n                                                                            \r\n                                                                            is24Hour={true}\r\n                                                                            display=\"default\"\r\n                                                                            onChange={(event, selectedDate) => {\r\n                                                                                \r\n                                                                                if(selectedDate){\r\n                                                                                    setrole(-1)\r\n                                                                                    setShow(Platform.OS === 'ios');\r\n                                                                                    setuserToAdd(handleDatePickerOnChange(selectedDate,index,key));\r\n                                                                                }else{\r\n                                                                                    setrole(-1)\r\n                                                                                }\r\n                                                                                \r\n                                                                            }\r\n                                                                                \r\n                                                                            }\r\n                                                                        />    \r\n                                                                    </View>\r\n                                                                    \r\n                                                                )}\r\n                                                                \r\n                                                                \r\n                                                            </TouchableOpacity>\r\n                                                        )\r\n                                                    }\r\n                                                    \r\n                                                })}\r\n\r\n                                                \r\n                                            </View>\r\n                                        )\r\n                                        \r\n                                    })}\r\n                                    <Button\r\n                                        title=\"ajouter un appartement\"\r\n                                        onPress={() =>{\r\n                                            handleAddAppartement();\r\n                                        }\r\n                                        }\r\n                                    />\r\n                                \r\n                            </ScrollView>\r\n                            \r\n                            <Button\r\n                                title=\"Ajouter\"\r\n                                onPress={handleSubmit}\r\n                            />\r\n                            <View></View> \r\n                        </View>      \r\n                    )\r\n                }}\r\n        </TheContextConsumer>\r\n            \r\n            \r\n\r\n        \r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n    },\r\n    input: {\r\n        width: 300,\r\n        height: 40,\r\n        padding: 5,\r\n        marginVertical: 10,\r\n        marginHorizontal: 30,\r\n        borderWidth: 1,\r\n        borderColor: 'grey',\r\n        borderStyle: 'solid',\r\n        borderRadius: 3,\r\n        backgroundColor:\"white\",\r\n    },\r\n});\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}