{"ast":null,"code":"import React from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nexport default function Charges(ListDesAppartements) {\n  var results = [];\n  var today = new Date();\n  today.setUTCHours(0, 0, 0, 0);\n  var NextJunFromToDayTimeStamp = FindNextJun(today).getTime();\n  var dayPrice = 4850 / 365;\n  ListDesAppartements.map(function (appartment, i) {\n    var app = {\n      titreFoncier: appartment.titreFoncier,\n      chargesListe: []\n    };\n    var ContractTimeStamp = appartment.DateDeSignatureDuContrat.toDate().getTime();\n    var ContractnextJuneTimeStamp = FindNextJun(appartment.DateDeSignatureDuContrat.toDate()).getTime();\n\n    do {\n      app[\"chargesListe\"].push({\n        days: Math.floor((ContractnextJuneTimeStamp - ContractTimeStamp) / (1000 * 60 * 60 * 24)),\n        charge: Math.floor((ContractnextJuneTimeStamp - ContractTimeStamp) / (1000 * 60 * 60 * 24) * (4850 / 365)),\n        saison: new Date(ContractnextJuneTimeStamp - 1000 * 365 * 60 * 60 * 24).getFullYear() + \"/\" + new Date(ContractnextJuneTimeStamp).getFullYear()\n      });\n      ContractTimeStamp = ContractnextJuneTimeStamp;\n      ContractnextJuneTimeStamp += 365 * 24 * 60 * 60 * 1000;\n    } while (ContractnextJuneTimeStamp < NextJunFromToDayTimeStamp);\n\n    results.push(app);\n  });\n  Alert.alert(\"coucou\");\n  return results;\n}","map":{"version":3,"sources":["D:/dropshipping/mobile developpement/bentriaa/useFull/Charges.js"],"names":["React","Charges","ListDesAppartements","results","today","Date","setUTCHours","NextJunFromToDayTimeStamp","FindNextJun","getTime","dayPrice","map","appartment","i","app","titreFoncier","chargesListe","ContractTimeStamp","DateDeSignatureDuContrat","toDate","ContractnextJuneTimeStamp","push","days","Math","floor","charge","saison","getFullYear","Alert","alert"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAIA,eAAe,SAASC,OAAT,CAAiBC,mBAAjB,EAAsC;AACjD,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACAD,EAAAA,KAAK,CAACE,WAAN,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B;AACA,MAAIC,yBAAyB,GAAGC,WAAW,CAACJ,KAAD,CAAX,CAAmBK,OAAnB,EAAhC;AACA,MAAIC,QAAQ,GAAG,OAAK,GAApB;AAEAR,EAAAA,mBAAmB,CAACS,GAApB,CAAwB,UAACC,UAAD,EAAYC,CAAZ,EAAgB;AAEpC,QAAIC,GAAG,GAAG;AACNC,MAAAA,YAAY,EAAGH,UAAU,CAACG,YADpB;AAENC,MAAAA,YAAY,EAAG;AAFT,KAAV;AAIA,QAAIC,iBAAiB,GAAGL,UAAU,CAACM,wBAAX,CAAoCC,MAApC,GAA6CV,OAA7C,EAAxB;AACA,QAAIW,yBAAyB,GAAGZ,WAAW,CAACI,UAAU,CAACM,wBAAX,CAAoCC,MAApC,EAAD,CAAX,CAA0DV,OAA1D,EAAhC;;AAIA,OAAE;AACEK,MAAAA,GAAG,CAAC,cAAD,CAAH,CAAoBO,IAApB,CAAyB;AACrBC,QAAAA,IAAI,EAAGC,IAAI,CAACC,KAAL,CAAY,CAACJ,yBAAyB,GAACH,iBAA3B,KAA+C,OAAK,EAAL,GAAQ,EAAR,GAAW,EAA1D,CAAZ,CADc;AAErBQ,QAAAA,MAAM,EAAGF,IAAI,CAACC,KAAL,CAAY,CAACJ,yBAAyB,GAACH,iBAA3B,KAA+C,OAAK,EAAL,GAAQ,EAAR,GAAW,EAA1D,KAA+D,OAAK,GAApE,CAAZ,CAFY;AAGrBS,QAAAA,MAAM,EAAI,IAAIrB,IAAJ,CAASe,yBAAyB,GAAE,OAAK,GAAL,GAAS,EAAT,GAAY,EAAZ,GAAe,EAAnD,CAAD,CAA0DO,WAA1D,KAAwE,GAAxE,GAA6E,IAAItB,IAAJ,CAASe,yBAAT,CAAD,CAAsCO,WAAtC;AAHhE,OAAzB;AAKAV,MAAAA,iBAAiB,GAAGG,yBAApB;AACAA,MAAAA,yBAAyB,IAAI,MAAI,EAAJ,GAAO,EAAP,GAAU,EAAV,GAAa,IAA1C;AAEH,KATD,QASOA,yBAAyB,GAAGb,yBATnC;;AAYAJ,IAAAA,OAAO,CAACkB,IAAR,CAAaP,GAAb;AACH,GAxBD;AA0BAc,EAAAA,KAAK,CAACC,KAAN,CAAY,QAAZ;AACA,SAAO1B,OAAP;AAEH","sourcesContent":["import React from 'react'\r\nimport { Alert } from 'react-native';\r\n\r\n\r\nexport default function Charges(ListDesAppartements) {\r\n    let results = []\r\n    let today = new Date()\r\n    today.setUTCHours(0, 0, 0, 0);\r\n    let NextJunFromToDayTimeStamp = FindNextJun(today).getTime()\r\n    let dayPrice = 4850/365\r\n\r\n    ListDesAppartements.map((appartment,i)=>{\r\n        \r\n        let app = {\r\n            titreFoncier : appartment.titreFoncier,\r\n            chargesListe : []\r\n        }\r\n        let ContractTimeStamp = appartment.DateDeSignatureDuContrat.toDate().getTime()\r\n        let ContractnextJuneTimeStamp = FindNextJun(appartment.DateDeSignatureDuContrat.toDate()).getTime()\r\n\r\n        \r\n        \r\n        do{\r\n            app[\"chargesListe\"].push({\r\n                days : Math.floor( (ContractnextJuneTimeStamp-ContractTimeStamp)/(1000*60*60*24) ),\r\n                charge : Math.floor( (ContractnextJuneTimeStamp-ContractTimeStamp)/(1000*60*60*24)*(4850/365) ),\r\n                saison : (new Date(ContractnextJuneTimeStamp-(1000*365*60*60*24))).getFullYear()+\"/\"+(new Date(ContractnextJuneTimeStamp)).getFullYear()\r\n            })\r\n            ContractTimeStamp = ContractnextJuneTimeStamp;\r\n            ContractnextJuneTimeStamp += 365*24*60*60*1000\r\n            \r\n        }while(ContractnextJuneTimeStamp < NextJunFromToDayTimeStamp)\r\n        \r\n        \r\n        results.push(app)\r\n    })\r\n        \r\n    Alert.alert(\"coucou\")\r\n    return(results)\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}