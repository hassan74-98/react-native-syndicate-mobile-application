{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\dropshipping\\\\mobile developpement\\\\bentriaa\\\\EditUser.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { TheContextConsumer } from \"./context/context\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { fireStore } from \"./firebase/firebase\";\nimport _ from 'loadash';\nexport default function EditUser(_ref) {\n  var _this = this;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      userToEdit = _useState2[0],\n      setuserToEdit = _useState2[1];\n\n  useEffect(function () {\n    setuserToEdit(route.params.user);\n  }, []);\n\n  var handleAddAppartement = function handleAddAppartement() {\n    setuserToEdit(_objectSpread(_objectSpread({}, userToEdit), userToEdit.proprietaireDe.push({\n      titreFoncier: \"\",\n      DateDeSignatureDuContrat: \"\",\n      NomDuNotaire: \"\",\n      NAppartement: \"\",\n      Immeuble: \"\"\n    })));\n  };\n\n  var _useState3 = useState(-1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      role = _useState4[0],\n      setrole = _useState4[1];\n\n  var myRefs = useRef([]);\n  var myRefs2 = useRef([]);\n\n  var _useState5 = useState('date'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mode = _useState6[0],\n      setMode = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      show = _useState8[0],\n      setShow = _useState8[1];\n\n  var handleDatePickerOnChange = function handleDatePickerOnChange(selectedDate, index, key) {\n    var NewObject = _objectSpread({}, userToEdit);\n\n    NewObject[\"proprietaireDe\"][index][key] = new Date(JSON.stringify(selectedDate).split('\"')[1].split('T')[0]);\n    return NewObject;\n  };\n\n  var showMode = function showMode(currentMode) {\n    setMode(currentMode);\n  };\n\n  var showDatepicker = function showDatepicker(x) {\n    showMode('date');\n    setrole(x);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var verfied = true;\n\n    if (!userToEdit[\"proprietaireDe\"][0]) {\n      verfied = false;\n      Alert.alert(\"Champ maquant:\", \"Veuillez ajouter au moins un appartement.\" + userToEdit[\"proprietaireDe\"].length.toString());\n    }\n\n    Object.keys(userToEdit).map(function (key, i) {\n      if (key.toString() === \"proprietaireDe\") {\n        userToEdit[key].map(function (appartement, appI) {\n          Object.keys(appartement).map(function (appKey) {\n            if (appartement[appKey] === \"\") {\n              Alert.alert(\"Champ manquant:\", appKey.toString() + \"\\n\" + \"(Appartement : \" + (appI + 1) + \")\");\n              verfied = false;\n            }\n          });\n        });\n      } else {\n        if (userToEdit[key] === \"\") {\n          Alert.alert(\"Champ manquant:\", key.toString());\n          verfied = false;\n        }\n      }\n    });\n\n    if (verfied === true) {\n      auThentication.createUserWithEmailAndPassword(userToEdit.email, userToEdit.password).then(function (Credentials) {\n        fireStore.collection(\"users\").doc(Credentials.user.uid).set(userToEdit).catch(function (e) {\n          Alert.alert(e.toString());\n        }).catch(function (e) {\n          return Alert.alert(e.toString());\n        });\n      }).then(function () {\n        Alert.alert(userToEdit.email, \"ajouté 👍\");\n        setuserToEdit({\n          email: \"\",\n          password: \"123456\",\n          nom: \"\",\n          prenom: \"\",\n          numeroDeTelephone: \"\",\n          cin: \"\",\n          proprietaireDe: []\n        });\n      }).catch(function (e) {\n        return Alert.alert(e.toString());\n      });\n    }\n  };\n\n  return React.createElement(TheContextConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, function (value) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, \"ajouter un compte locataire\"), React.createElement(ScrollView, {\n      style: {\n        backgroundColor: \"grey\",\n        width: \"100%\",\n        height: \"50%\",\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 37\n      }\n    }, \"infos personelles\"), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 37\n      }\n    }, userToEdit && Object.keys(userToEdit).map(function (key, i) {\n      if (key !== \"proprietaireDe\" && key !== \"password\" && key !== \"id\") {\n        return React.createElement(View, {\n          key: i,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 53\n          }\n        }, React.createElement(TextInput, {\n          style: styles.input,\n          placeholder: key,\n          label: key,\n          value: userToEdit[key],\n          onChangeText: function onChangeText(text) {\n            setuserToEdit(function (prev) {\n              var New = _objectSpread({}, prev);\n\n              New[key] = text;\n              return New;\n            });\n          },\n          ref: function ref(tag) {\n            return myRefs.current[i] = tag;\n          },\n          onSubmitEditing: function onSubmitEditing() {\n            for (var t = 1; t < myRefs.current.length - i; t++) {\n              if (myRefs.current[i + t]) {\n                myRefs.current[i + t].focus();\n                break;\n              }\n            }\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 57\n          }\n        }));\n      }\n    })), userToEdit && userToEdit[\"proprietaireDe\"].map(function (appartement, index) {\n      return React.createElement(View, {\n        key: index,\n        style: {\n          backgroundColor: \"yellow\",\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 45\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 49\n        }\n      }, \" Appartement \", index + 1, \" \"), React.createElement(Button, {\n        title: \"annuler\",\n        onPress: function onPress() {\n          if (index > -1) {\n            var n = userToEdit[\"proprietaireDe\"];\n            n.splice(index, 1);\n            setuserToEdit(_objectSpread(_objectSpread({}, userToEdit), {}, {\n              proprietaireDe: n\n            }));\n          }\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 53\n        }\n      }), Object.keys(appartement).map(function (key, i) {\n        if (key !== \"DateDeSignatureDuContrat\") {\n          return React.createElement(View, {\n            key: i,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 61\n            }\n          }, React.createElement(Text, {\n            key: i,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 65\n            }\n          }, key, \" \"), React.createElement(TextInput, {\n            ref: function ref(tag) {\n              return myRefs2.current[i] = tag;\n            },\n            style: styles.input,\n            placeholder: key,\n            value: appartement[key],\n            onChangeText: function onChangeText(text) {\n              var NewObject = _objectSpread({}, userToEdit);\n\n              userToEdit[\"proprietaireDe\"][index][key] = text;\n              setuserToEdit(NewObject);\n            },\n            onSubmitEditing: function onSubmitEditing() {\n              for (var t = 1; t < myRefs2.current.length - i; t++) {\n                if (myRefs2.current[i + t]) {\n                  myRefs2.current[i + t].focus();\n                  break;\n                }\n              }\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 65\n            }\n          }));\n        } else {\n          return React.createElement(TouchableOpacity, {\n            style: {\n              display: \"flex\",\n              flexDirection: \"row\",\n              backgroundColor: \"red\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            },\n            onPress: function onPress() {\n              return showDatepicker(index);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 61\n            }\n          }, React.createElement(Text, {\n            style: {\n              width: 300,\n              height: 40,\n              padding: 5,\n              marginVertical: 10,\n              borderColor: 'grey',\n              borderStyle: 'solid',\n              borderRadius: 3,\n              backgroundColor: \"white\",\n              textAlignVertical: \"center\",\n              textAlign: \"center\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 65\n            }\n          }, typeof appartement[key] === \"string\" ? React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 113\n            }\n          }, \"date \\\"Click pour selectionner une date\\\" \") : React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 171\n            }\n          }, JSON.stringify(appartement[key]).split('\"')[1].split(\"T\")[0], \" \")), role === index && React.createElement(View, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 69\n            }\n          }, React.createElement(DateTimePicker, {\n            testID: key.toString(),\n            value: appartement[key] || new Date(1577883600000),\n            mode: mode,\n            is24Hour: true,\n            display: \"default\",\n            onChange: function onChange(event, selectedDate) {\n              if (selectedDate) {\n                setrole(-1);\n                setShow(Platform.OS === 'ios');\n                setuserToEdit(handleDatePickerOnChange(selectedDate, index, key));\n              } else {\n                setrole(-1);\n              }\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 73\n            }\n          })));\n        }\n      }));\n    }), React.createElement(Button, {\n      title: \"ajouter un appartement\",\n      onPress: function onPress() {\n        handleAddAppartement();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 37\n      }\n    })), React.createElement(Button, {\n      title: \"Ajouter\",\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 29\n      }\n    }), React.createElement(Button, {\n      title: \"Annuler\",\n      onPress: function onPress() {\n        Alert.alert(JSON.stringify(value.usersList[0].proprietaireDe[0].DateDeSignatureDuContrat), JSON.stringify(userToEdit.proprietaireDe[0].DateDeSignatureDuContrat));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 29\n      }\n    }), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 29\n      }\n    }));\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  input: {\n    width: 300,\n    height: 40,\n    padding: 5,\n    marginVertical: 10,\n    marginHorizontal: 30,\n    borderWidth: 1,\n    borderColor: 'grey',\n    borderStyle: 'solid',\n    borderRadius: 3,\n    backgroundColor: \"white\"\n  }\n});","map":{"version":3,"sources":["D:/dropshipping/mobile developpement/bentriaa/EditUser.js"],"names":["React","useEffect","useRef","useState","TouchableOpacity","TheContextConsumer","DateTimePicker","fireStore","_","EditUser","route","navigation","userToEdit","setuserToEdit","params","user","handleAddAppartement","proprietaireDe","push","titreFoncier","DateDeSignatureDuContrat","NomDuNotaire","NAppartement","Immeuble","role","setrole","myRefs","myRefs2","mode","setMode","show","setShow","handleDatePickerOnChange","selectedDate","index","key","NewObject","Date","JSON","stringify","split","showMode","currentMode","showDatepicker","x","handleSubmit","verfied","Alert","alert","length","toString","Object","keys","map","i","appartement","appI","appKey","auThentication","createUserWithEmailAndPassword","email","password","then","Credentials","collection","doc","uid","set","catch","e","nom","prenom","numeroDeTelephone","cin","value","styles","container","backgroundColor","width","height","textAlign","input","text","prev","New","tag","current","t","focus","n","splice","display","flexDirection","alignItems","justifyContent","padding","marginVertical","borderColor","borderStyle","borderRadius","textAlignVertical","event","Platform","OS","usersList","StyleSheet","create","flex","marginHorizontal","borderWidth"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { Alert } from 'react-native'\r\nimport { View, Text, TextInput, StyleSheet, Button,ScrollView } from 'react-native'\r\nimport { TouchableOpacity } from 'react-native-gesture-handler'\r\nimport { TheContextConsumer } from './context/context'\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\nimport { fireStore } from './firebase/firebase'\r\n\r\nimport _ from 'loadash'\r\n\r\nexport default function EditUser({ route,navigation }) {\r\n    \r\n    // const [initialUser, setuserToAdd] = useState(route.params.user)\r\n    \r\n    const [userToEdit, setuserToEdit] = useState()\r\n\r\n    \r\n    //++++++++++++++++++++++++++++++++++++++++++++++++ \r\n    useEffect(() => {\r\n        setuserToEdit(route.params.user)\r\n        \r\n    }, [])\r\n    // add appartement to appatements\r\n    const handleAddAppartement = () => {\r\n        setuserToEdit({...userToEdit,...userToEdit.proprietaireDe.push(\r\n            {\r\n                titreFoncier:\"\",\r\n                DateDeSignatureDuContrat : \"\",\r\n                NomDuNotaire : \"\",\r\n                NAppartement : \"\",\r\n                Immeuble : \"\",\r\n            }\r\n        )})\r\n    }\r\n    \r\n    // ++++++++++++++++++++++++++++\r\n\r\n\r\n    // Triggers to show date-pickers\r\n    const [role, setrole] = useState(-1)\r\n    //+++++++++++++++++++++++++++++\r\n\r\n    // input Refs To focus on next input automatically\r\n    const myRefs= useRef([]);\r\n    const myRefs2= useRef([]);\r\n    // +++++++++++++++++++++++++++++++++++++++++++++++\r\n\r\n    // date picker parameters and functions\r\n    const [mode, setMode] = useState('date');\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleDatePickerOnChange = (selectedDate,index,key) => {\r\n\r\n        \r\n        let NewObject = {...userToEdit}\r\n        NewObject[\"proprietaireDe\"][index][key] = (new Date(JSON.stringify(selectedDate).split('\"')[1].split('T')[0]));\r\n        return(NewObject)\r\n    }\r\n    const showMode = (currentMode) => {\r\n        setMode(currentMode);\r\n    };\r\n    const showDatepicker = (x) => {\r\n        showMode('date');\r\n        setrole(x)\r\n    };\r\n    // +++++++++++++++++++++++++++++++++++++++++++++++\r\n\r\n\r\n    \r\n    \r\n\r\n    \r\n    \r\n    \r\n    \r\n    const handleSubmit = () => {\r\n        let verfied = true;\r\n        \r\n        if(!userToEdit[\"proprietaireDe\"][0]){\r\n            verfied = false;\r\n            Alert.alert(\"Champ maquant:\",\"Veuillez ajouter au moins un appartement.\"+userToEdit[\"proprietaireDe\"].length.toString())\r\n        }\r\n        Object.keys(userToEdit).map((key,i)=>{\r\n            if(key.toString() === \"proprietaireDe\"){\r\n                \r\n                userToEdit[key].map((appartement,appI)=>{\r\n                    Object.keys(appartement).map((appKey)=>{\r\n                        if(appartement[appKey] === \"\"){\r\n                            Alert.alert(\"Champ manquant:\", appKey.toString() +\"\\n\"+ \"(Appartement : \" + (appI+1)+\")\")\r\n                            verfied = false\r\n                        }\r\n                    })\r\n                })\r\n                \r\n            }else{\r\n                if(userToEdit[key] === \"\"){\r\n                    Alert.alert(\"Champ manquant:\",key.toString())\r\n                    verfied = false;\r\n                }\r\n            }\r\n\r\n        })\r\n        if(verfied===true){\r\n\r\n            auThentication.createUserWithEmailAndPassword(userToEdit.email,userToEdit.password).then((Credentials)=>{\r\n                fireStore.collection(\"users\").doc(Credentials.user.uid).set(userToEdit).catch((e)=>{\r\n                    Alert.alert(e.toString());\r\n                }).catch((e)=>Alert.alert(e.toString()))\r\n            }).then(()=>{\r\n                Alert.alert(userToEdit.email,\"ajouté 👍\");\r\n                setuserToEdit({\r\n                    email:\"\",\r\n                    password:\"123456\",\r\n                    nom:\"\",\r\n                    prenom:\"\",\r\n                    numeroDeTelephone:\"\",\r\n                    cin:\"\",\r\n                    proprietaireDe:[]\r\n                })\r\n            }).catch((e)=>Alert.alert(e.toString()))\r\n        }\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        <TheContextConsumer>\r\n                {(value) => {\r\n                    return(\r\n                        <View style={styles.container}>\r\n                            <Text>ajouter un compte locataire</Text>\r\n                            <ScrollView style={{backgroundColor:\"grey\",width:\"100%\",height:\"50%\",textAlign:\"center\"}}>\r\n                                \r\n                                    <Text>infos personelles</Text>\r\n                                    \r\n                                    <View>\r\n                                        \r\n                                        {(userToEdit) && Object.keys(userToEdit).map((key, i)=>{\r\n                                            \r\n                                            if(key !== \"proprietaireDe\" && key !== \"password\" && key !== \"id\" ){\r\n                                                return(\r\n                                                    <View key={i}>\r\n                                                        {/* <Text>{key.toString()} </Text> */}\r\n                                                        <TextInput style={styles.input}\r\n                                                            placeholder={key} \r\n                                                            label={key}\r\n                                                            value={userToEdit[key]}\r\n                                                            onChangeText={(text) => {\r\n                                                                setuserToEdit((prev)=>{\r\n                                                                    let New = {...prev}\r\n                                                                    New[key] = text\r\n                                                                    return(New)\r\n                                                                }) \r\n                                                            }}\r\n                                                            ref={tag => (myRefs.current[i] = tag)} \r\n                                                            \r\n                                                            onSubmitEditing={() => {\r\n                                                                \r\n                                                                for(let t = 1 ; t<(myRefs.current.length - i) ; t++ ){\r\n                                                                    if(myRefs.current[i+t]){\r\n                                                                        myRefs.current[i+t].focus();\r\n                                                                        break \r\n                                                                    }\r\n                                                                    \r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </View>\r\n                                                )        \r\n                                            }\r\n                                            \r\n                                            \r\n                                        })}\r\n                                    </View>\r\n                                    {(userToEdit) && userToEdit[\"proprietaireDe\"].map((appartement,index) =>{\r\n                                        \r\n                                        return(\r\n                                            <View key={index} style={{backgroundColor:\"yellow\",textAlign:\"center\"}}>\r\n                                                <Text > Appartement {index+1} </Text>\r\n                                                    <Button\r\n                                                        title=\"annuler\"\r\n                                                        onPress={()=>{\r\n                                                            \r\n                                                            if(index > -1){\r\n                                                                let n =userToEdit[\"proprietaireDe\"]\r\n                                                                n.splice(index,1)\r\n                                                                setuserToEdit({...userToEdit,proprietaireDe:n})\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n                                                \r\n\r\n                                                {Object.keys(appartement).map((key, i)=>{\r\n                                                    if(key !== \"DateDeSignatureDuContrat\"){\r\n                                                        return(\r\n                                                            <View key={i} >\r\n                                                                <Text key={i}>{key} </Text>\r\n                                                                <TextInput\r\n                                                                    ref={tag => (myRefs2.current[i] = tag)} \r\n                                                                    style={styles.input}\r\n                                                                    placeholder={key}\r\n                                                                    value={appartement[key]}\r\n                                                                    onChangeText={(text) => {\r\n                                                                        let NewObject = {...userToEdit}                                                        \r\n                                                                        userToEdit[\"proprietaireDe\"][index][key] = text;\r\n                                                                        setuserToEdit(NewObject);\r\n                                                                    }}\r\n                                                                    onSubmitEditing={() => {\r\n                                                                \r\n                                                                        for(let t = 1 ; t<(myRefs2.current.length - i) ; t++ ){\r\n                                                                            if(myRefs2.current[i+t]){\r\n                                                                                myRefs2.current[i+t].focus();\r\n                                                                                break \r\n                                                                            }\r\n                                                                            \r\n                                                                        }\r\n                                                                    }}\r\n                                                                    \r\n                                                                />\r\n                                                        \r\n                                                            </View>\r\n                                                        )   \r\n                                                    }else{\r\n                                                        return(\r\n                                                            \r\n                                                            <TouchableOpacity style={{display:\"flex\",flexDirection:\"row\",backgroundColor:\"red\",alignItems:\"center\",justifyContent:\"center\"}} onPress={()=>showDatepicker(index)}>\r\n\r\n\r\n                                                                <Text style={{width: 300,height: 40,padding: 5,marginVertical: 10,borderColor: 'grey',borderStyle: 'solid',borderRadius: 3,backgroundColor:\"white\",textAlignVertical:\"center\",textAlign:\"center\"}}>\r\n                                                                    {(typeof(appartement[key]) === \"string\") ? (<Text>date \"Click pour selectionner une date\" </Text>) : (<Text>{JSON.stringify(appartement[key]).split('\"')[1].split(\"T\")[0]} </Text>)}\r\n                                                                    {/* JSON.stringify(new Date(appartement[key].toDate())).split('\"')[1].split('T')[0] */}\r\n                                                                </Text>\r\n                                                                \r\n                                                                {(role === index) && (\r\n                                                                \r\n                                                                    <View>\r\n                                                                        \r\n                                                                        <DateTimePicker\r\n                                                                            testID={key.toString()}\r\n                                                                            value={appartement[key] || new Date(1577883600000)}\r\n                                                                            mode={mode}\r\n                                                                            \r\n                                                                            is24Hour={true}\r\n                                                                            display=\"default\"\r\n                                                                            onChange={(event, selectedDate) => {\r\n                                                                                \r\n                                                                                if(selectedDate){\r\n                                                                                    \r\n                                                                                    setrole(-1)\r\n                                                                                    setShow(Platform.OS === 'ios');\r\n                                                                                    setuserToEdit(handleDatePickerOnChange(selectedDate,index,key));\r\n                                                                                }else{\r\n                                                                                    setrole(-1)\r\n                                                                                }\r\n                                                                                \r\n                                                                            }\r\n                                                                                \r\n                                                                            }\r\n                                                                        />    \r\n                                                                    </View>\r\n                                                                    \r\n                                                                )}\r\n                                                                \r\n                                                                \r\n                                                            </TouchableOpacity>\r\n                                                        )\r\n                                                    }\r\n                                                    \r\n                                                })}\r\n\r\n                                                \r\n                                            </View>\r\n                                        )\r\n                                        \r\n                                    })}\r\n                                    <Button\r\n                                        title=\"ajouter un appartement\"\r\n                                        onPress={() =>{\r\n                                            handleAddAppartement();\r\n                                        }\r\n                                        }\r\n                                    />\r\n                                \r\n                            </ScrollView>\r\n                            \r\n                            <Button\r\n                                title=\"Ajouter\"\r\n                                onPress={handleSubmit}\r\n                            />\r\n                            <Button\r\n                                title=\"Annuler\"\r\n                                onPress={()=>{\r\n                                    Alert.alert(JSON.stringify(value.usersList[0].proprietaireDe[0].DateDeSignatureDuContrat),JSON.stringify(userToEdit.proprietaireDe[0].DateDeSignatureDuContrat))\r\n                                    // setuserToAdd(initialUser)\r\n                                    // value.getUsersList()\r\n                                    // Alert.alert(JSON.stringify(route.params.user[\"proprietaireDe\"][0].DateDeSignatureDuContrat),JSON.stringify(userToEdit[\"proprietaireDe\"][0].DateDeSignatureDuContrat))\r\n                                    // navigation.navigate('SelectUser') \r\n                                }\r\n                                    \r\n                                }\r\n                            />\r\n                            <View></View> \r\n                        </View>      \r\n                    )\r\n                }}\r\n        </TheContextConsumer>\r\n            \r\n            \r\n\r\n        \r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n    },\r\n    input: {\r\n        width: 300,\r\n        height: 40,\r\n        padding: 5,\r\n        marginVertical: 10,\r\n        marginHorizontal: 30,\r\n        borderWidth: 1,\r\n        borderColor: 'grey',\r\n        borderStyle: 'solid',\r\n        borderRadius: 3,\r\n        backgroundColor:\"white\",\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}