{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\dropshipping\\\\mobile developpement\\\\bentriaa\\\\screens\\\\AddUser.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useRef, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport { set } from 'react-native-reanimated';\nimport { TheContextConsumer } from \"../context/context\";\nexport default function AddUser(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    email: \"\",\n    password: \"123456\",\n    nom: \"\",\n    prenom: \"\",\n    numeroDeTelephone: \"\",\n    cin: \"\",\n    proprietaireDe: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      userToAdd = _useState2[0],\n      setuserToAdd = _useState2[1];\n\n  var handleAddAppartement = function handleAddAppartement() {\n    setuserToAdd(_objectSpread(_objectSpread({}, userToAdd), userToAdd.proprietaireDe.push({\n      titreFoncier: \"\",\n      DateDeSignatureDuContrat: new Date(0),\n      NomDuNotaire: \"\",\n      NAppartement: \"\",\n      Immeuble: \"\"\n    })));\n  };\n\n  var myRefs = useRef([]);\n\n  var handleSubmit = function handleSubmit(x) {\n    navigation.navigate('Dashboard');\n  };\n\n  return React.createElement(TheContextConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, function (value) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }, \"ajouter un compte locataire\"), React.createElement(ScrollView, {\n      style: {\n        backgroundColor: \"grey\",\n        width: \"100%\",\n        height: \"50%\",\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 37\n      }\n    }, \"infos personelles\"), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 37\n      }\n    }, Object.keys(userToAdd).map(function (key, i) {\n      if (key !== \"proprietaireDe\" && key !== \"password\") {\n        return React.createElement(View, {\n          key: i,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 53\n          }\n        }, React.createElement(Text, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 57\n          }\n        }, key.toString(), \" \"), React.createElement(TextInput, {\n          style: styles.input,\n          placeholder: key,\n          label: key,\n          value: userToAdd[key],\n          onChangeText: function onChangeText(text) {\n            setuserToAdd(function (prev) {\n              var New = _objectSpread({}, prev);\n\n              New[key] = text;\n              return New;\n            });\n          },\n          ref: function ref(tag) {\n            return myRefs.current[i] = tag;\n          },\n          onSubmitEditing: function onSubmitEditing() {\n            if (myRefs.current[i + 1]) {\n              myRefs.current[i + 1].focus();\n            }\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 57\n          }\n        }));\n      }\n    })), userToAdd[\"proprietaireDe\"].map(function (appartement, index) {\n      return React.createElement(View, {\n        key: index,\n        style: {\n          backgroundColor: \"yellow\",\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 45\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 49\n        }\n      }, \" Appartement \", index + 1, \" \"), React.createElement(Button, {\n        title: \"annuler\",\n        onPress: function onPress() {\n          if (index > -1) {\n            setuserToAdd(_objectSpread(_objectSpread({}, userToAdd), userToAdd.proprietaireDe.splice(index, 1)));\n          }\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 53\n        }\n      }), Object.keys(appartement).map(function (key, i) {\n        return React.createElement(View, {\n          key: i,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 57\n          }\n        }, React.createElement(Text, {\n          key: i,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 61\n          }\n        }, key, \" \"), React.createElement(TextInput, {\n          style: styles.input,\n          placeholder: key,\n          value: appartement[key],\n          onChangeText: function onChangeText(text) {\n            var NemObject = _objectSpread({}, userToAdd);\n\n            userToAdd[\"proprietaireDe\"][index][key] = text;\n            setuserToAdd(NemObject);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 61\n          }\n        }));\n      }));\n    }), React.createElement(Button, {\n      title: \"attribuer un appartement\",\n      onPress: function onPress() {\n        handleAddAppartement();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 37\n      }\n    })), React.createElement(Button, {\n      title: \"Ajouter\",\n      onPress: function onPress() {\n        console.log(userToAdd, myRefs);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }));\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  input: {\n    width: 300,\n    height: 40,\n    padding: 5,\n    marginVertical: 10,\n    marginHorizontal: 30,\n    borderWidth: 1,\n    borderColor: 'grey',\n    borderStyle: 'solid',\n    borderRadius: 3,\n    backgroundColor: \"white\"\n  }\n});\n{}","map":{"version":3,"sources":["D:/dropshipping/mobile developpement/bentriaa/screens/AddUser.js"],"names":["React","useRef","useState","TextInput","set","TheContextConsumer","AddUser","navigation","email","password","nom","prenom","numeroDeTelephone","cin","proprietaireDe","userToAdd","setuserToAdd","handleAddAppartement","push","titreFoncier","DateDeSignatureDuContrat","Date","NomDuNotaire","NAppartement","Immeuble","myRefs","handleSubmit","x","navigate","value","styles","container","backgroundColor","width","height","textAlign","Object","keys","map","key","i","toString","input","text","prev","New","tag","current","focus","appartement","index","splice","NemObject","console","log","StyleSheet","create","flex","alignItems","justifyContent","padding","marginVertical","marginHorizontal","borderWidth","borderColor","borderStyle","borderRadius"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\r\nimport { StyleSheet,View, Text, Button, Alert, ScrollView } from 'react-native'\r\nimport { TextInput } from 'react-native-gesture-handler'\r\nimport { set } from 'react-native-reanimated';\r\nimport { TheContextConsumer } from '../context/context';\r\n\r\nexport default function AddUser({ navigation }) {\r\n    const [userToAdd, setuserToAdd] = useState({\r\n        email:\"\",\r\n        password:\"123456\",\r\n        nom:\"\",\r\n        prenom:\"\",\r\n        numeroDeTelephone:\"\",\r\n        cin:\"\",\r\n        proprietaireDe:[]\r\n    })\r\n    const handleAddAppartement = () => {\r\n        setuserToAdd({...userToAdd,...userToAdd.proprietaireDe.push(\r\n            {\r\n                titreFoncier:\"\",\r\n                DateDeSignatureDuContrat : new Date(0),\r\n                NomDuNotaire : \"\",\r\n                NAppartement : \"\",\r\n                Immeuble : \"\",\r\n            }\r\n        )})\r\n    }\r\n    const myRefs= useRef([]);\r\n    \r\n    \r\n    const handleSubmit = (x) => {\r\n        \r\n        navigation.navigate('Dashboard')\r\n    }\r\n\r\n    return (\r\n        <TheContextConsumer>\r\n                {(value) => {\r\n                    return(\r\n                        <View style={styles.container}>\r\n                            <Text>ajouter un compte locataire</Text>\r\n                            <ScrollView style={{backgroundColor:\"grey\",width:\"100%\",height:\"50%\",textAlign:\"center\"}}>\r\n                                \r\n                                    <Text>infos personelles</Text>\r\n                                    \r\n                                    <View>\r\n                                        {Object.keys(userToAdd).map((key, i)=>{\r\n                                            \r\n                                            if(key !== \"proprietaireDe\" && key !== \"password\" ){\r\n                                                return(\r\n                                                    <View key={i}>\r\n                                                        <Text>{key.toString()} </Text>\r\n                                                        <TextInput style={styles.input}\r\n                                                            placeholder={key} \r\n                                                            label={key}\r\n                                                            value={userToAdd[key]}\r\n                                                            onChangeText={(text) => {\r\n                                                                setuserToAdd((prev)=>{\r\n                                                                    let New = {...prev}\r\n                                                                    New[key] = text\r\n                                                                    return(New)\r\n                                                                }) \r\n                                                            }}\r\n                                                            ref={tag => (myRefs.current[i] = tag)} \r\n                                                            // autoFocus={true}\r\n                                                            onSubmitEditing={() => {\r\n                                                                if(myRefs.current[i+1]){\r\n                                                                  myRefs.current[i+1].focus()  \r\n                                                                }\r\n                                                                \r\n                                                            }}\r\n                                                        />\r\n                                                    </View>\r\n                                                )        \r\n                                            }\r\n                                            \r\n                                            \r\n                                        })}\r\n                                    </View>\r\n                                    {userToAdd[\"proprietaireDe\"].map((appartement,index) =>{\r\n                                        \r\n                                        return(\r\n                                            <View key={index} style={{backgroundColor:\"yellow\",textAlign:\"center\"}}>\r\n                                                <Text > Appartement {index+1} </Text>\r\n                                                    <Button\r\n                                                        title=\"annuler\"\r\n                                                        onPress={()=>{\r\n                                                            if(index > -1){\r\n                                                                setuserToAdd({...userToAdd,...userToAdd.proprietaireDe.splice(index, 1)})\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n                                                \r\n\r\n                                                {Object.keys(appartement).map((key, i)=>{\r\n\r\n                                                    return(\r\n                                                        <View key={i} >\r\n                                                            <Text key={i}>{key} </Text>\r\n                                                            <TextInput\r\n                                                                \r\n                                                                style={styles.input}\r\n                                                                placeholder={key}\r\n                                                                value={appartement[key]}\r\n                                                                onChangeText={(text) => {\r\n                                                                    let NemObject = {...userToAdd}                                                        \r\n                                                                    userToAdd[\"proprietaireDe\"][index][key] = text;\r\n                                                                    setuserToAdd(NemObject);\r\n                                                                }} \r\n                                                                \r\n                                                            />\r\n                                                    \r\n                                                        </View>\r\n                                                    )\r\n                                                })}\r\n\r\n                                                \r\n                                            </View>\r\n                                        )\r\n                                        \r\n                                    })}\r\n                                    <Button\r\n                                        title=\"attribuer un appartement\"\r\n                                        onPress={() =>{\r\n                                            handleAddAppartement();\r\n                                        }\r\n                                        }\r\n                                    />\r\n                                \r\n                            </ScrollView>\r\n                            \r\n                            <Button\r\n                                title=\"Ajouter\"\r\n                                onPress={() =>{\r\n                                    console.log(userToAdd,myRefs)\r\n                                    // handleSubmit(value.addNewUser(userToAdd))\r\n                                }\r\n                                \r\n                                }\r\n                            />\r\n                            <View></View> \r\n                        </View>      \r\n                    )\r\n                }}\r\n        </TheContextConsumer>\r\n            \r\n            \r\n\r\n        \r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n    },\r\n    input: {\r\n        width: 300,\r\n        height: 40,\r\n        padding: 5,\r\n        marginVertical: 10,\r\n        marginHorizontal: 30,\r\n        borderWidth: 1,\r\n        borderColor: 'grey',\r\n        borderStyle: 'solid',\r\n        borderRadius: 3,\r\n        backgroundColor:\"white\",\r\n    },\r\n});\r\n\r\n{/* \r\n<View>\r\n<TextInput style={styles.input}\r\n    placeholder=\"Email\" \r\n    label=\"Email\" \r\n    value={userToAdd.email}\r\n    onChangeText={(text) => {\r\n        setuserToAdd({...userToAdd,email:text})\r\n    }}\r\n    autoFocus={true}\r\n    onSubmitEditing={() => ref_input2.current.focus()}\r\n/>\r\n<TextInput style={styles.input}\r\n    placeholder=\"Password\" \r\n    label=\"Password\" \r\n    value={userToAdd.Password}\r\n    secureTextEntry={true}\r\n    onChangeText={(text) => {\r\n        setuserToAdd({...userToAdd,password:text})\r\n    }}\r\n    ref={ref_input2}\r\n    onSubmitEditing={() => ref_input3.current.focus()}\r\n/>\r\n<TextInput style={styles.input}\r\n    placeholder=\"Nom\" \r\n    label=\"Nom\" \r\n    value={userToAdd.nom}\r\n    onChangeText={(text) => {\r\n        setuserToAdd({...userToAdd,nom:text})\r\n    }}\r\n    ref={ref_input3}\r\n    onSubmitEditing={() => ref_input4.current.focus()} \r\n/>\r\n<TextInput style={styles.input}\r\n    placeholder=\"Prenom\" \r\n    label=\"Prenom\" \r\n    value={userToAdd.prenom}\r\n    onChangeText={(text) => {\r\n        setuserToAdd({...userToAdd,prenom:text})\r\n    }}\r\n    ref={ref_input4}\r\n    onSubmitEditing={() => ref_input5.current.focus()}\r\n/>\r\n<TextInput style={styles.input}\r\n    placeholder=\"Numero De Telephone\" \r\n    label=\"Numero De Telephone\" \r\n    value={userToAdd.numeroDeTelephone}\r\n    onChangeText={(text) => {\r\n        setuserToAdd({...userToAdd,numeroDeTelephone:text})\r\n    }}\r\n    ref={ref_input5}\r\n    onSubmitEditing={() => ref_input6.current.focus()}\r\n/>\r\n<TextInput style={styles.input}\r\n    placeholder=\"CIN\" \r\n    label=\"CIN\" \r\n    value={userToAdd.cin}\r\n    onChangeText={(text) => {\r\n        setuserToAdd({...userToAdd,cin:text})\r\n    }}\r\n    ref={ref_input6}\r\n    \r\n/>    \r\n</View> */}"]},"metadata":{},"sourceType":"module"}