{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\dropshipping\\\\mobile developpement\\\\bentriaa\\\\screens\\\\AddUser.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useRef, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { TextInput, TouchableOpacity } from 'react-native-gesture-handler';\nimport { TheContextConsumer } from \"../context/context\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { auThentication, fireStore } from \"../firebase/firebase\";\nexport default function AddUser(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    email: \"\",\n    password: \"123456\",\n    nom: \"\",\n    prenom: \"\",\n    numeroDeTelephone: \"\",\n    cin: \"\",\n    proprietaireDe: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      userToAdd = _useState2[0],\n      setuserToAdd = _useState2[1];\n\n  var handleAddAppartement = function handleAddAppartement() {\n    setuserToAdd(_objectSpread(_objectSpread({}, userToAdd), userToAdd.proprietaireDe.push({\n      titreFoncier: \"\",\n      DateDeSignatureDuContrat: \"\",\n      NomDuNotaire: \"\",\n      NAppartement: \"\",\n      Immeuble: \"\"\n    })));\n  };\n\n  var _useState3 = useState(-1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      role = _useState4[0],\n      setrole = _useState4[1];\n\n  var myRefs = useRef([]);\n  var myRefs2 = useRef([]);\n\n  var _useState5 = useState('date'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mode = _useState6[0],\n      setMode = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      show = _useState8[0],\n      setShow = _useState8[1];\n\n  var handleDatePickerOnChange = function handleDatePickerOnChange(selectedDate, index, key) {\n    var NewObject = _objectSpread({}, userToAdd);\n\n    NewObject[\"proprietaireDe\"][index][key] = new Date(JSON.stringify(selectedDate).split('\"')[1].split('T')[0]);\n    return NewObject;\n  };\n\n  var showMode = function showMode(currentMode) {\n    setMode(currentMode);\n  };\n\n  var showDatepicker = function showDatepicker(x) {\n    showMode('date');\n    setrole(x);\n  };\n\n  var FindNextJun = function FindNextJun(date) {\n    var dateToSec = date.getTime();\n    var junDateToSec = date.setMonth(5);\n    junDateToSec = date.setDate(1);\n\n    if (dateToSec - junDateToSec > 0) {\n      return new Date(365 * 24 * 60 * 60 * 1000 + junDateToSec);\n    } else {\n      return new Date(junDateToSec);\n    }\n  };\n\n  var ChargeByAppartement = function ChargeByAppartement() {\n    var newObject = _objectSpread({}, userToAdd);\n\n    var montantTotal = 0;\n    newObject.proprietaireDe.map(function (Appartement, i) {\n      var today = new Date();\n      today.setHours(0, 0, 0, 0);\n      Alert.alert(JSON.stringify(FindNextJun(Appartement.DateDeSignatureDuContrat)), JSON.stringify(today) + \"\\n\" + JSON.stringify(Math.floor((FindNextJun(today) - Appartement.DateDeSignatureDuContrat) / (1000 * 60 * 60 * 24) * (4850 / 365))) + \" dh\");\n    });\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var verfied = true;\n\n    if (!userToAdd[\"proprietaireDe\"][0]) {\n      verfied = false;\n      Alert.alert(\"Champ maquant:\", \"Veuillez ajouter au moins un appartement.\" + userToAdd[\"proprietaireDe\"].length.toString());\n    }\n\n    Object.keys(userToAdd).map(function (key, i) {\n      if (key.toString() === \"proprietaireDe\") {\n        userToAdd[key].map(function (appartement, appI) {\n          Object.keys(appartement).map(function (appKey) {\n            if (appartement[appKey] === \"\") {\n              Alert.alert(\"Champ manquant:\", appKey.toString() + \"\\n\" + \"(Appartement : \" + (appI + 1) + \")\");\n              verfied = false;\n            }\n          });\n\n          for (var t = appI + 1; t < userToAdd[key].length; t++) {\n            if (appartement[\"titreFoncier\"] === userToAdd[key][t][\"titreFoncier\"]) {\n              Alert.alert(\"Meme titre foncier pour deux appartement !!!\", \"Appartement :\" + (appI + 1).toString() + \" et \" + (t + 1).toString());\n              verfied = false;\n            }\n          }\n        });\n      } else {\n        if (userToAdd[key] === \"\") {\n          Alert.alert(\"Champ manquant:\", key.toString());\n          verfied = false;\n        }\n      }\n    });\n\n    if (verfied === true) {\n      ChargeByAppartement();\n    }\n  };\n\n  return React.createElement(TheContextConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, function (value) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }\n    }, \"ajouter un compte locataire\"), React.createElement(ScrollView, {\n      style: {\n        backgroundColor: \"grey\",\n        width: \"100%\",\n        height: \"50%\",\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 37\n      }\n    }, \"infos personelles\"), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 37\n      }\n    }, Object.keys(userToAdd).map(function (key, i) {\n      if (key !== \"proprietaireDe\" && key !== \"password\") {\n        return React.createElement(View, {\n          key: i,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 53\n          }\n        }, React.createElement(TextInput, {\n          style: styles.input,\n          placeholder: key,\n          label: key,\n          value: userToAdd[key],\n          onChangeText: function onChangeText(text) {\n            setuserToAdd(function (prev) {\n              var New = _objectSpread({}, prev);\n\n              New[key] = text;\n              return New;\n            });\n          },\n          ref: function ref(tag) {\n            return myRefs.current[i] = tag;\n          },\n          onSubmitEditing: function onSubmitEditing() {\n            for (var t = 1; t < myRefs.current.length - i; t++) {\n              if (myRefs.current[i + t]) {\n                myRefs.current[i + t].focus();\n                break;\n              }\n            }\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 57\n          }\n        }));\n      }\n    })), userToAdd[\"proprietaireDe\"].map(function (appartement, index) {\n      return React.createElement(View, {\n        key: index,\n        style: {\n          backgroundColor: \"yellow\",\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 45\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 49\n        }\n      }, \" Appartement \", index + 1, \" \"), React.createElement(Button, {\n        title: \"annuler\",\n        onPress: function onPress() {\n          if (index > -1) {\n            var n = userToAdd[\"proprietaireDe\"];\n            n.splice(index, 1);\n            setuserToAdd(_objectSpread(_objectSpread({}, userToAdd), {}, {\n              proprietaireDe: n\n            }));\n          }\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 53\n        }\n      }), Object.keys(appartement).map(function (key, i) {\n        if (key !== \"DateDeSignatureDuContrat\") {\n          return React.createElement(View, {\n            key: i,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 61\n            }\n          }, React.createElement(Text, {\n            key: i,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 65\n            }\n          }, key, \" \"), React.createElement(TextInput, {\n            ref: function ref(tag) {\n              return myRefs2.current[i] = tag;\n            },\n            style: styles.input,\n            placeholder: key,\n            value: appartement[key],\n            onChangeText: function onChangeText(text) {\n              var NewObject = _objectSpread({}, userToAdd);\n\n              userToAdd[\"proprietaireDe\"][index][key] = text;\n              setuserToAdd(NewObject);\n            },\n            onSubmitEditing: function onSubmitEditing() {\n              for (var t = 1; t < myRefs2.current.length - i; t++) {\n                if (myRefs2.current[i + t]) {\n                  myRefs2.current[i + t].focus();\n                  break;\n                }\n              }\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 65\n            }\n          }));\n        } else {\n          return React.createElement(TouchableOpacity, {\n            style: {\n              display: \"flex\",\n              flexDirection: \"row\",\n              backgroundColor: \"red\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            },\n            onPress: function onPress() {\n              return showDatepicker(index);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 61\n            }\n          }, React.createElement(Text, {\n            style: {\n              width: 300,\n              height: 40,\n              padding: 5,\n              marginVertical: 10,\n              borderColor: 'grey',\n              borderStyle: 'solid',\n              borderRadius: 3,\n              backgroundColor: \"white\",\n              textAlignVertical: \"center\",\n              textAlign: \"center\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 65\n            }\n          }, typeof appartement[key] === \"string\" ? React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 113\n            }\n          }, \"date \\\"Click pour selectionner une date\\\" \") : React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 171\n            }\n          }, JSON.stringify(appartement[key]).split('\"')[1].split(\"T\")[0])), role === index && React.createElement(View, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 69\n            }\n          }, React.createElement(DateTimePicker, {\n            testID: key.toString(),\n            value: appartement[key] || new Date(1577883600000),\n            mode: mode,\n            is24Hour: true,\n            display: \"default\",\n            onChange: function onChange(event, selectedDate) {\n              if (selectedDate) {\n                setrole(-1);\n                setShow(Platform.OS === 'ios');\n                setuserToAdd(handleDatePickerOnChange(selectedDate, index, key));\n              } else {\n                setrole(-1);\n              }\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 73\n            }\n          })));\n        }\n      }));\n    }), React.createElement(Button, {\n      title: \"ajouter un appartement\",\n      onPress: function onPress() {\n        handleAddAppartement();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 37\n      }\n    })), React.createElement(Button, {\n      title: \"Ajouter\",\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 29\n      }\n    }), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 29\n      }\n    }));\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  input: {\n    width: 300,\n    height: 40,\n    padding: 5,\n    marginVertical: 10,\n    marginHorizontal: 30,\n    borderWidth: 1,\n    borderColor: 'grey',\n    borderStyle: 'solid',\n    borderRadius: 3,\n    backgroundColor: \"white\"\n  }\n});","map":{"version":3,"sources":["D:/dropshipping/mobile developpement/bentriaa/screens/AddUser.js"],"names":["React","useRef","useState","TextInput","TouchableOpacity","TheContextConsumer","DateTimePicker","auThentication","fireStore","AddUser","navigation","email","password","nom","prenom","numeroDeTelephone","cin","proprietaireDe","userToAdd","setuserToAdd","handleAddAppartement","push","titreFoncier","DateDeSignatureDuContrat","NomDuNotaire","NAppartement","Immeuble","role","setrole","myRefs","myRefs2","mode","setMode","show","setShow","handleDatePickerOnChange","selectedDate","index","key","NewObject","Date","JSON","stringify","split","showMode","currentMode","showDatepicker","x","FindNextJun","date","dateToSec","getTime","junDateToSec","setMonth","setDate","ChargeByAppartement","newObject","montantTotal","map","Appartement","i","today","setHours","Alert","alert","Math","floor","handleSubmit","verfied","length","toString","Object","keys","appartement","appI","appKey","t","value","styles","container","backgroundColor","width","height","textAlign","input","text","prev","New","tag","current","focus","n","splice","display","flexDirection","alignItems","justifyContent","padding","marginVertical","borderColor","borderStyle","borderRadius","textAlignVertical","event","Platform","OS","StyleSheet","create","flex","marginHorizontal","borderWidth"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\r\nimport { StyleSheet,View, Text, Button, Alert, ScrollView } from 'react-native'\r\nimport { TextInput, TouchableOpacity } from 'react-native-gesture-handler'\r\n\r\nimport { TheContextConsumer } from '../context/context';\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\nimport { auThentication, fireStore } from '../firebase/firebase';\r\nexport default function AddUser({ navigation }) {\r\n    // Usr Infos \r\n    const [userToAdd, setuserToAdd] = useState({\r\n        email:\"\",\r\n        password:\"123456\",\r\n        nom:\"\",\r\n        prenom:\"\",\r\n        numeroDeTelephone:\"\",\r\n        cin:\"\",\r\n        \r\n        proprietaireDe:[]\r\n    })\r\n    //++++++++++++++++++++++++++++++++++++++++++++++++ \r\n\r\n    // add appartement to appatements\r\n    const handleAddAppartement = () => {\r\n        setuserToAdd({...userToAdd,...userToAdd.proprietaireDe.push(\r\n            {\r\n                titreFoncier:\"\",\r\n                DateDeSignatureDuContrat : \"\",\r\n                NomDuNotaire : \"\",\r\n                NAppartement : \"\",\r\n                Immeuble : \"\",\r\n            }\r\n        )})\r\n    }\r\n    \r\n    // ++++++++++++++++++++++++++++\r\n\r\n\r\n    // Triggers to show date-pickers\r\n    const [role, setrole] = useState(-1)\r\n    //+++++++++++++++++++++++++++++\r\n\r\n    // input Refs To focus on next input automatically\r\n    const myRefs= useRef([]);\r\n    const myRefs2= useRef([]);\r\n    // +++++++++++++++++++++++++++++++++++++++++++++++\r\n\r\n    // date picker parameters and functions\r\n    const [mode, setMode] = useState('date');\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleDatePickerOnChange = (selectedDate,index,key) => {\r\n\r\n        // let mySelectedDate = new Date(selectedDate)\r\n        // Alert.alert(JSON.stringify(selectedDate),mySelectedDate.getFullYear()+\" / \"+mySelectedDate.getMonth()+\" / \"+mySelectedDate.getDate()+\"\\n\"+(new Date(JSON.stringify(selectedDate).split('\"')[1].split('T')[0])).toString())\r\n        // let NewSelectedDate = new Date(mySelectedDate.getFullYear(),mySelectedDate.getMonth(),mySelectedDate.getDate());\r\n        let NewObject = {...userToAdd}\r\n        NewObject[\"proprietaireDe\"][index][key] = (new Date(JSON.stringify(selectedDate).split('\"')[1].split('T')[0]));\r\n        return(NewObject)\r\n    }\r\n    const showMode = (currentMode) => {\r\n        setMode(currentMode);\r\n    };\r\n    const showDatepicker = (x) => {\r\n        showMode('date');\r\n        setrole(x)\r\n    };\r\n    // +++++++++++++++++++++++++++++++++++++++++++++++\r\n    const FindNextJun = (date)=>{\r\n        let dateToSec = date.getTime()\r\n        let junDateToSec = date.setMonth(5)\r\n        junDateToSec = date.setDate(1)\r\n        if(dateToSec-junDateToSec > 0){\r\n            return(new Date(365*24*60*60*1000+junDateToSec))\r\n        }else{\r\n            return(new Date(junDateToSec))\r\n        }\r\n    }\r\n    const ChargeByAppartement = () => {\r\n        let newObject = {...userToAdd}\r\n        let montantTotal = 0\r\n        newObject.proprietaireDe.map((Appartement,i) =>{\r\n            \r\n            \r\n            let today = new Date()\r\n            today.setHours(0, 0, 0, 0);\r\n            \r\n            Alert.alert(JSON.stringify(FindNextJun(Appartement.DateDeSignatureDuContrat)),JSON.stringify(today)+\"\\n\"+JSON.stringify(Math.floor(((FindNextJun(today)-Appartement.DateDeSignatureDuContrat)/(1000*60*60*24))*(4850/365)))+\" dh\")\r\n        })\r\n    }\r\n    \r\n    \r\n\r\n    \r\n    \r\n    \r\n    \r\n    const handleSubmit = () => {\r\n        let verfied = true;\r\n        \r\n        if(!userToAdd[\"proprietaireDe\"][0]){\r\n            verfied = false;\r\n            Alert.alert(\"Champ maquant:\",\"Veuillez ajouter au moins un appartement.\"+userToAdd[\"proprietaireDe\"].length.toString())\r\n        }\r\n\r\n        Object.keys(userToAdd).map((key,i)=>{\r\n            if(key.toString() === \"proprietaireDe\"){\r\n                \r\n                userToAdd[key].map((appartement,appI)=>{\r\n                    // appartement[\"titreFoncier\"]\r\n\r\n                    Object.keys(appartement).map((appKey)=>{\r\n\r\n                        if(appartement[appKey] === \"\"){\r\n                            Alert.alert(\"Champ manquant:\", appKey.toString() +\"\\n\"+ \"(Appartement : \" + (appI+1)+\")\")\r\n                            verfied = false\r\n                        }\r\n                        \r\n                    })\r\n                    for(var t = appI+1 ; t < userToAdd[key].length ; t++){\r\n                        \r\n                        if(appartement[\"titreFoncier\"] === userToAdd[key][t][\"titreFoncier\"] ){\r\n                            Alert.alert(\"Meme titre foncier pour deux appartement !!!\",\"Appartement :\"+(appI+1).toString()+\" et \"+(t+1).toString());\r\n                            verfied = false\r\n                            \r\n                        }\r\n                    }\r\n                })\r\n                \r\n            }else{\r\n                if(userToAdd[key] === \"\"){\r\n                    Alert.alert(\"Champ manquant:\",key.toString())\r\n                    verfied = false;\r\n                }\r\n            }\r\n\r\n        })\r\n        if(verfied===true){\r\n            ChargeByAppartement()\r\n            // auThentication.createUserWithEmailAndPassword(userToAdd.email,userToAdd.password).then((Credentials)=>{\r\n            //     fireStore.collection(\"users\").doc(Credentials.user.uid).set(userToAdd).catch((e)=>{\r\n            //         Alert.alert(e.toString());\r\n            //     }).catch((e)=>Alert.alert(e.toString()))\r\n            // }).then(()=>{\r\n            //     Alert.alert(userToAdd.email,\"ajouté 👍\");\r\n            //     setuserToAdd({\r\n            //         email:\"\",\r\n            //         password:\"123456\",\r\n            //         nom:\"\",\r\n            //         prenom:\"\",\r\n            //         numeroDeTelephone:\"\",\r\n            //         cin:\"\",\r\n            //         proprietaireDe:[]\r\n            //     })\r\n            // }).catch((e)=>Alert.alert(e.toString()))\r\n        }\r\n        \r\n        \r\n        \r\n    }\r\n    \r\n\r\n    return (\r\n        <TheContextConsumer>\r\n                {(value) => {\r\n                    return(\r\n                        <View style={styles.container}>\r\n                            <Text>ajouter un compte locataire</Text>\r\n                            <ScrollView style={{backgroundColor:\"grey\",width:\"100%\",height:\"50%\",textAlign:\"center\"}}>\r\n                                \r\n                                    <Text>infos personelles</Text>\r\n                                    \r\n                                    <View>\r\n                                        \r\n                                        {Object.keys(userToAdd).map((key, i)=>{\r\n                                            \r\n                                            if(key !== \"proprietaireDe\" && key !== \"password\" ){\r\n                                                return(\r\n                                                    <View key={i}>\r\n                                                        {/* <Text>{key.toString()} </Text> */}\r\n                                                        <TextInput style={styles.input}\r\n                                                            placeholder={key} \r\n                                                            label={key}\r\n                                                            value={userToAdd[key]}\r\n                                                            onChangeText={(text) => {\r\n                                                                setuserToAdd((prev)=>{\r\n                                                                    let New = {...prev}\r\n                                                                    New[key] = text\r\n                                                                    return(New)\r\n                                                                }) \r\n                                                            }}\r\n                                                            ref={tag => (myRefs.current[i] = tag)} \r\n                                                            \r\n                                                            onSubmitEditing={() => {\r\n                                                                \r\n                                                                for(let t = 1 ; t<(myRefs.current.length - i) ; t++ ){\r\n                                                                    if(myRefs.current[i+t]){\r\n                                                                        myRefs.current[i+t].focus();\r\n                                                                        break \r\n                                                                    }\r\n                                                                    \r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </View>\r\n                                                )        \r\n                                            }\r\n                                            \r\n                                            \r\n                                        })}\r\n                                    </View>\r\n                                    {userToAdd[\"proprietaireDe\"].map((appartement,index) =>{\r\n                                        \r\n                                        return(\r\n                                            <View key={index} style={{backgroundColor:\"yellow\",textAlign:\"center\"}}>\r\n                                                <Text > Appartement {index+1} </Text>\r\n                                                    <Button\r\n                                                        title=\"annuler\"\r\n                                                        onPress={()=>{\r\n                                                            \r\n                                                            if(index > -1){\r\n                                                                let n =userToAdd[\"proprietaireDe\"]\r\n                                                                n.splice(index,1)\r\n                                                                setuserToAdd({...userToAdd,proprietaireDe:n})\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n                                                \r\n\r\n                                                {Object.keys(appartement).map((key, i)=>{\r\n                                                    if(key !== \"DateDeSignatureDuContrat\"){\r\n                                                        return(\r\n                                                            <View key={i} >\r\n                                                                <Text key={i}>{key} </Text>\r\n                                                                <TextInput\r\n                                                                    ref={tag => (myRefs2.current[i] = tag)} \r\n                                                                    style={styles.input}\r\n                                                                    placeholder={key}\r\n                                                                    value={appartement[key]}\r\n                                                                    onChangeText={(text) => {\r\n                                                                        let NewObject = {...userToAdd}                                                        \r\n                                                                        userToAdd[\"proprietaireDe\"][index][key] = text;\r\n                                                                        setuserToAdd(NewObject);\r\n                                                                    }}\r\n                                                                    onSubmitEditing={() => {\r\n                                                                \r\n                                                                        for(let t = 1 ; t<(myRefs2.current.length - i) ; t++ ){\r\n                                                                            if(myRefs2.current[i+t]){\r\n                                                                                myRefs2.current[i+t].focus();\r\n                                                                                break \r\n                                                                            }\r\n                                                                            \r\n                                                                        }\r\n                                                                    }}\r\n                                                                    \r\n                                                                />\r\n                                                        \r\n                                                            </View>\r\n                                                        )   \r\n                                                    }else{\r\n                                                        return(\r\n                                                            \r\n                                                            <TouchableOpacity style={{display:\"flex\",flexDirection:\"row\",backgroundColor:\"red\",alignItems:\"center\",justifyContent:\"center\"}} onPress={()=>showDatepicker(index)}>\r\n\r\n\r\n                                                                <Text style={{width: 300,height: 40,padding: 5,marginVertical: 10,borderColor: 'grey',borderStyle: 'solid',borderRadius: 3,backgroundColor:\"white\",textAlignVertical:\"center\",textAlign:\"center\"}}>\r\n                                                                    {(typeof(appartement[key]) === \"string\") ? (<Text>date \"Click pour selectionner une date\" </Text>) : (<Text>{JSON.stringify(appartement[key]).split('\"')[1].split(\"T\")[0]}</Text>)}\r\n                                                                </Text>\r\n                                                                \r\n                                                                {(role === index) && (\r\n                                                                \r\n                                                                    <View>\r\n                                                                        \r\n                                                                        <DateTimePicker\r\n                                                                            testID={key.toString()}\r\n                                                                            value={appartement[key] || new Date(1577883600000)}\r\n                                                                            mode={mode}\r\n                                                                            \r\n                                                                            is24Hour={true}\r\n                                                                            display=\"default\"\r\n                                                                            onChange={(event, selectedDate) => {\r\n                                                                                \r\n                                                                                if(selectedDate){\r\n                                                                                    setrole(-1)\r\n                                                                                    setShow(Platform.OS === 'ios');\r\n                                                                                    setuserToAdd(handleDatePickerOnChange(selectedDate,index,key));\r\n                                                                                }else{\r\n                                                                                    setrole(-1)\r\n                                                                                }\r\n                                                                                \r\n                                                                            }\r\n                                                                                \r\n                                                                            }\r\n                                                                        />    \r\n                                                                    </View>\r\n                                                                    \r\n                                                                )}\r\n                                                                \r\n                                                                \r\n                                                            </TouchableOpacity>\r\n                                                        )\r\n                                                    }\r\n                                                    \r\n                                                })}\r\n\r\n                                                \r\n                                            </View>\r\n                                        )\r\n                                        \r\n                                    })}\r\n                                    <Button\r\n                                        title=\"ajouter un appartement\"\r\n                                        onPress={() =>{\r\n                                            handleAddAppartement();\r\n                                        }\r\n                                        }\r\n                                    />\r\n                                \r\n                            </ScrollView>\r\n                            \r\n                            <Button\r\n                                title=\"Ajouter\"\r\n                                onPress={handleSubmit}\r\n                            />\r\n                            <View></View> \r\n                        </View>      \r\n                    )\r\n                }}\r\n        </TheContextConsumer>\r\n            \r\n            \r\n\r\n        \r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n    },\r\n    input: {\r\n        width: 300,\r\n        height: 40,\r\n        padding: 5,\r\n        marginVertical: 10,\r\n        marginHorizontal: 30,\r\n        borderWidth: 1,\r\n        borderColor: 'grey',\r\n        borderStyle: 'solid',\r\n        borderRadius: 3,\r\n        backgroundColor:\"white\",\r\n    },\r\n});\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}